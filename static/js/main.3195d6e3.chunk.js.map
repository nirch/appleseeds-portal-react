{"version":3,"sources":["components/hours/date.format.js","shared/server.js","shared/activeUserContext.js","components/ShowAlert/ShowAlert.js","pages/login/LoginPage.js","components/navbar/PortalNavbar.js","components/search/PortalSearchPager.jsx","components/TableComponent/PortalTable.js","components/navbar/PortalButtonSet.js","pages/courses/CoursesPage.js","pages/courses/CourseDetailsPage.js","pages/users/UsersPage.js","utils/utils.js","components/PortalInput.js","pages/users/UserDetailsPage.js","components/hours/HoursReport.js","components/hours/HoursReportTable.js","pages/hours/HoursReportPage.js","pages/hours/ReportedHoursDetailsItem.jsx","pages/hours/WorkerHoursReportingItem.jsx","components/PortalDayMonthPickerComponent/PortalDayMonthPickerComponent.js","pages/hours/HoursApprovePage.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["dateFormat","token","timezone","timezoneClip","pad","val","len","String","length","date","mask","utc","dF","arguments","Object","prototype","toString","call","test","undefined","Date","isNaN","SyntaxError","masks","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","flags","dd","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","tt","T","TT","Z","match","pop","replace","floor","abs","S","$0","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","format","this","activeUser","data","type","a","v","request","method","url","phpDomain","JSON","stringify","headers","axios","response","server","ActiveUserContext","React","createContext","ShowAlert","props","p_Text","handleClose","colorstyle","color","imgsrc","className","src","style","onClick","LoginPage","handleLogin","useState","email","setEmail","textError","setTextError","pwd","setPwd","useContext","to","showerror","Container","onSubmit","e","pass","then","res","console","log","error","err","noValidate","value","placeholder","onChange","target","setEmailCleanError","setPassCleanError","PortalNavbar","handleLogout","showUsersTypes","setShowUsersTypes","showMenu","setShowMenu","openMenu","showHideDivClasses","arrowDivClasses","class","ng-click","Row","alt","Col","xs","id","href","PortalSearchPager","pages","handleSearch","pageChange","currentPage","input","setInput","prevPageClasses","push","nextPageClasses","pageIndicator","join","ev","onKeyDown","keyCode","ifEnterPressed","PortalTable","handleClick","headerRow","i","key","header","rows","currentRow","j","currentData","Component","PortalButtonSet","buttons","activeKey","buttonsComp","map","item","activeBtnClass","Button","variant","bg","label","fluid","CoursesPage","setActiveKey","selectedCourseId","setselectedCourseId","courseSearchString","setCourseSearchString","setCurrentPage","serverData","setServerData","setPages","useEffect","search","sorting","desc","coursestatus","page","courses","alert","fetchData","selectedCourseUrl","searchInput","newCurrentPage","courseSelected","courseid","btnClicked","CourseDetailsPage","UsersPage","apiName","userType","mappedApi","getApiName","location","substring","setData","pageNum","setPageNum","userStatus","setUserStatus","searchString","setSearchString","createPayload","catch","users","index","callPageData","history","pathname","userid","state","clickOnRow","handleUserType","PortalInput","inputTitle","inputPlaceholder","handleChange","inputValue","setInputValue","event","UserDetailsPage","HoursReport","report","row_class","startHour","starthour","finishhour","timeDiff","split","reverse","createDateObject","approval","margin","width","projectid","actionid","HoursReportTable","reports","jsxReports","forEach","HoursReportPage","jsonReports","ReportedHoursDetailsItem","name","for","WorkerHoursReportingItem","PortalDayMonthPickerComponent","aDate","initialDate","displayType","theDateToShow","setTheDateToShow","months","handleMinusClick","newDate","getTime","setDate","getDate","removeDay","currentMonth","getMonth","currentYear","getFullYear","setMonth","setFullYear","removeMonth","handlePlusClick","addDay","addMonth","ButtonGroup","aria-label","toLocaleDateString","HoursApprovePage","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","App","localStorage","parse","setActiveUser","removeItem","Provider","exact","path","render","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3195d6e3.chunk.js","sourcesContent":["/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nvar dateFormat = function () {\n\tvar\ttoken = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\n\t\ttimezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n\t\ttimezoneClip = /[^-+\\dA-Z]/g,\n\t\tpad = function (val, len) {\n\t\t\tval = String(val);\n\t\t\tlen = len || 2;\n\t\t\twhile (val.length < len) val = \"0\" + val;\n\t\t\treturn val;\n\t\t};\n\n\t// Regexes and supporting functions are cached through closure\n\treturn function (date, mask, utc) {\n\t\tvar dF = dateFormat;\n\n\t\t// You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n\t\tif (arguments.length == 1 && Object.prototype.toString.call(date) == \"[object String]\" && !/\\d/.test(date)) {\n\t\t\tmask = date;\n\t\t\tdate = undefined;\n\t\t}\n\n\t\t// Passing date through Date applies Date.parse, if necessary\n\t\tdate = date ? new Date(date) : new Date;\n\t\tif (isNaN(date)) throw SyntaxError(\"invalid date\");\n\n\t\tmask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\n\n\t\t// Allow setting the utc argument via the mask\n\t\tif (mask.slice(0, 4) == \"UTC:\") {\n\t\t\tmask = mask.slice(4);\n\t\t\tutc = true;\n\t\t}\n\n\t\tvar\t_ = utc ? \"getUTC\" : \"get\",\n\t\t\td = date[_ + \"Date\"](),\n\t\t\tD = date[_ + \"Day\"](),\n\t\t\tm = date[_ + \"Month\"](),\n\t\t\ty = date[_ + \"FullYear\"](),\n\t\t\tH = date[_ + \"Hours\"](),\n\t\t\tM = date[_ + \"Minutes\"](),\n\t\t\ts = date[_ + \"Seconds\"](),\n\t\t\tL = date[_ + \"Milliseconds\"](),\n\t\t\to = utc ? 0 : date.getTimezoneOffset(),\n\t\t\tflags = {\n\t\t\t\td:    d,\n\t\t\t\tdd:   pad(d),\n\t\t\t\tddd:  dF.i18n.dayNames[D],\n\t\t\t\tdddd: dF.i18n.dayNames[D + 7],\n\t\t\t\tm:    m + 1,\n\t\t\t\tmm:   pad(m + 1),\n\t\t\t\tmmm:  dF.i18n.monthNames[m],\n\t\t\t\tmmmm: dF.i18n.monthNames[m + 12],\n\t\t\t\tyy:   String(y).slice(2),\n\t\t\t\tyyyy: y,\n\t\t\t\th:    H % 12 || 12,\n\t\t\t\thh:   pad(H % 12 || 12),\n\t\t\t\tH:    H,\n\t\t\t\tHH:   pad(H),\n\t\t\t\tM:    M,\n\t\t\t\tMM:   pad(M),\n\t\t\t\ts:    s,\n\t\t\t\tss:   pad(s),\n\t\t\t\tl:    pad(L, 3),\n\t\t\t\tL:    pad(L > 99 ? Math.round(L / 10) : L),\n\t\t\t\tt:    H < 12 ? \"a\"  : \"p\",\n\t\t\t\ttt:   H < 12 ? \"am\" : \"pm\",\n\t\t\t\tT:    H < 12 ? \"A\"  : \"P\",\n\t\t\t\tTT:   H < 12 ? \"AM\" : \"PM\",\n\t\t\t\tZ:    utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\n\t\t\t\to:    (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n\t\t\t\tS:    [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\n\t\t\t};\n\n\t\treturn mask.replace(token, function ($0) {\n\t\t\treturn $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n\t\t});\n\t};\n}();\n\n// Some common format strings\ndateFormat.masks = {\n\t\"default\":      \"ddd mmm dd yyyy HH:MM:ss\",\n\tshortDate:      \"m/d/yy\",\n\tmediumDate:     \"mmm d, yyyy\",\n\tlongDate:       \"mmmm d, yyyy\",\n\tfullDate:       \"dddd, mmmm d, yyyy\",\n\tshortTime:      \"h:MM TT\",\n\tmediumTime:     \"h:MM:ss TT\",\n\tlongTime:       \"h:MM:ss TT Z\",\n\tisoDate:        \"yyyy-mm-dd\",\n\tisoTime:        \"HH:MM:ss\",\n\tisoDateTime:    \"yyyy-mm-dd'T'HH:MM:ss\",\n\tisoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n\tdayNames: [\n\t\t\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\n\t\t\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n\t],\n\tmonthNames: [\n\t\t\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\n\t\t\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t]\n};\n\n// For convenience...\nDate.prototype.format = function (mask, utc) {\n\treturn dateFormat(this, mask, utc);\n};\n","import axios from \"axios\";\n\nasync function server(activeUser, data, type) {\n\n    const version = 2.3;\n    const phpDomain = 'https://pil1.appleseeds.org.il/dcnir/server/';\n    const imgsDomain = 'https://pil1.appleseeds.org.il/dcnir/';\n\n    // Adding the user's token to the payload\n    data.token = activeUser ? activeUser.token : undefined;\n\n    // Adding the version to the payload\n    data.v = version;\n\n    // creating the request\n    const request = {\n        method: \"post\",\n        url: phpDomain + \"datagate.php?type=\" + type,\n        data: JSON.stringify(data),\n        headers : { 'Content-Type': undefined},\n    }\n\n    const response = await axios(request);\n    return response;\n    // if (json && json.error == \"user not found\") {\n    //     loginStatus\t=false;\n    //     $rootScope.userToken = \"\";\n    //     $rootScope.isAdmin = false;\n    //     $state.transitionTo('login');\n    // }\n    // else if (json && json.error==\"access permission\")\n    // {\n    //     alert(json.error);\n    // }\n}\n\nexport default server;","import React from 'react'\n\nconst ActiveUserContext = React.createContext(null);\n\nexport default ActiveUserContext;\n","import React, { useState, useContext } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap'\nimport './ShowAlert.css'\nimport server from '../../shared/server'\nimport { Redirect } from 'react-router-dom'\nimport ActiveUserContext from '../../shared/activeUserContext'\n\n// this function get two props and function \n//1. type - can get \"error\" or info and according to that select the icon and the color of the text \n//      pink for error and blue for info \n//2. p_text - the text the use want to be present on the window \n//3. The function \"setTextError\" is bollean and use for display or hide the window\n\nconst ShowAlert = (props) => {\n    const { type, p_Text, handleClose } = props;\n    const colorstyle = type === \"error\" ? { color: \"#ffa1a1\" } : { color: \"rgb(37,183,211)\" };\n    const imgsrc = type === \"error\" ? \"drawable-hdpi/noun_error_1156903.png\" : \"drawable-hdpi/icons8-info-39.png\"\n    return (\n        <div className=\"c_showalert\">\n            <div>\n                <div>\n                    <img src={imgsrc} />\n                </div>\n\n                <p style={colorstyle}>{p_Text}</p>\n            </div>\n            <a onClick={handleClose}>&times;</a>\n\n        </div>\n    );\n\n}\nexport default ShowAlert;","import React, { useState, useContext } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap'\nimport './login.css'\nimport server from '../../shared/server'\nimport { Redirect } from 'react-router-dom'\nimport ActiveUserContext from '../../shared/activeUserContext'\nimport ShowAlert from '../../components/ShowAlert/ShowAlert'\n\nconst LoginPage = (props) => {\n    const { handleLogin } = props;\n    const [email, setEmail] = useState(\"\");\n    const [textError, setTextError] = useState(\"\");\n    const [pwd, setPwd] = useState(\"\");\n    const activeUser = useContext(ActiveUserContext);\n    const type = \"error\";\n\n    const handleClose = () => {\n        setTextError(\"\");\n\n    }\n\n    const login = (e) => {\n\n        if (!email || !pwd) {\n\n            setTextError(\"נא להזין שם משתמש וסיסמה\");\n            // alert(\"נא להזין פרטי משתמש\");\n            return;\n        }\n\n\n        const data = { email, pass: pwd };\n        server(null, data, \"login\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n\n                setTextError(\"אימייל או סיסמה שגויים\");\n\n\n\n                //alert(\"error in login\");\n            } else {\n                handleLogin(res.data);\n            }\n        }, err => {\n            setTextError(\"שגיאה בשרת, נסה שוב מאוחר יותר\");\n            console.error(err);\n        })\n    }\n    const setEmailCleanError = (e) => {\n        setEmail(e.target.value);\n        if (textError != \"\") {\n            setTextError(\"\")\n        }\n\n    }\n    const setPassCleanError = (e) => {\n        setPwd(e.target.value);\n        if (textError != \"\") {\n            setTextError(\"\")\n        }\n\n    }\n    if (activeUser) {\n        return <Redirect to='/courses' />\n    }\n    const showerror = textError === \"\" ? \"errorlogin errorhide\" : \"errorlogin\";\n\n    return (\n\n\n\n        <Container className=\"p-login\">\n            <img src=\"drawable-hdpi/01.png\" />\n\n            <form onSubmit={login} noValidate>\n                <div className=\"loginbutton\">\n\n                    <input value={email} type=\"email\" placeholder=\"אימייל\" onChange={e => setEmailCleanError(e)} />\n                </div>\n                <div className=\"loginbutton\">\n\n                    <input value={pwd} placeholder=\"סיסמא\" type=\"password\" placeholder=\"סיסמה\" onChange={e => setPassCleanError(e)} >\n                    </input>\n                </div>\n                <div className=\"loginbutton\">\n                    <button type=\"submit\">התחברות</button>\n\n\n                </div>\n            </form>\n            <div className={showerror}>\n                <ShowAlert type={type} p_Text={textError} handleClose={handleClose} />\n            </div>\n\n        </Container >\n    );\n}\n\nexport default LoginPage;","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport './navbar.css'\n\nconst PortalNavbar = (props) => {\n    const { handleLogout } = props;\n    const [showUsersTypes, setShowUsersTypes] = useState(false);\n    const [showMenu, setShowMenu] = useState(false);\n\n\n    const openMenu = showMenu ? \"sidebar-open\" : \"sidebar-close\"\n    const showHideDivClasses = showUsersTypes ? \"showHide showUsersTypes\" : \"showHide\";\n    const arrowDivClasses = showUsersTypes ? \"iconDown iconUp\" : \"iconDown\";\n\n\n    return (\n        <div className=\"c-navbar\">\n            <div className=\"menu-icon-wrap\">\n                <div>\n                    <div className=\"menu-icon\" onClick={() => { setShowMenu(!showMenu); }} >\n                        <div class=\"hamburger-menu\">\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                        </div></div>\n                    <div className=\"menu-icon dartIcon\" ng-click=\"backClick()\"></div>\n                </div>\n\n\n\n\n\n\n\n                <div className={openMenu}>\n                    <div className=\"sidebar-background\" ng-click=\"closeSidebar()\"></div>\n                    <div className=\"sidebar-wrap\">\n                        <div className=\"sidebar\">\n                            <div class=\"sidebar-options\">\n                                <Container>\n                                    <Row>\n                                        <div className=\"sidebar-closebtn\">\n                                            <img alt=\"\" className=\"closebtn\" src=\"images/close_x_white.svg\" onClick={() => { setShowMenu(!showMenu); }} />\n                                        </div>\n                                    </Row>\n                                    <Row>\n                                        <div className=\"sidebar-header\">\n                                            <img alt=\"\" className=\"appleseeds-logo\" src=\"images/bg_logo.png\"></img>\n                                        </div>\n                                    </Row>\n                                    <div className=\"sidebar-username\">\n                                        <Row className=\"flexalign\">\n                                            <Col className=\"flex\" xs={3}>\n                                                <img alt=\"\" className=\"profile-image\" src=\"images/profile_icon.png\"></img>\n                                            </Col>\n                                            <Col xs={9}>\n                                                <div className=\"name-wrap\">\n                                                    <span className=\"user-name\">\n                                                        יעל אביבית\n                                            </span>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className=\"divider\" />\n\n                                    <div onClick={() => { setShowUsersTypes(!showUsersTypes); }}>\n                                        <Row className=\"flexalign\">\n                                            <Col className=\"flex\" xs={3}><img alt=\"\" className=\"icon1\" src=\"images/noun_user.png\" /></Col>\n                                            <Col xs={7}><div className=\"menu-information\">משתמשים</div></Col>\n                                            <Col xs={2}><img alt=\"\" id=\"arrow\" className={arrowDivClasses} src=\"images/arrow_down.png\" /></Col>\n                                        </Row>\n                                    </div>\n                                    <div className={showHideDivClasses}>\n                                        <Row className=\"usersTypes\">\n                                            <Col xs={3}></Col>\n                                            <Col xs={9}><a className=\"menu-information\" href=\"#/users?staff\" onClick={() => { setShowMenu(!showMenu); }}>עובדים</a></Col>\n                                        </Row>\n                                        <Row className=\"usersTypes\">\n                                            <Col xs={3}></Col>\n                                            <Col xs={9}><a className=\"menu-information\" href=\"#/users?students\" onClick={() => { setShowMenu(!showMenu); }}>חניכים</a></Col>\n                                        </Row>\n                                        <Row className=\"usersTypes\">\n                                            <Col xs={3}></Col>\n                                            <Col xs={9}><a className=\"menu-information\" href=\"#/users?newUsers\" onClick={() => { setShowMenu(!showMenu); }}>משתמשים חדשים</a></Col>\n                                        </Row>\n                                    </div>\n                                    <div className=\"divider\" />\n                                    <Row>\n                                        <Col className=\"flex\" xs={3}><img alt=\"\" className=\"icon2\" src=\"images/noun_book.png\" /></Col>\n                                        <Col xs={9}><a className=\"menu-information\" href=\"#/courses\" onClick={() => { setShowMenu(!showMenu); }}>קורסים</a></Col>\n                                    </Row>\n                                    <div className=\"divider\" />\n                                    <Row>\n                                        <Col className=\"flex\" xs={3}><img alt=\"\" className=\"icon3\" src=\"images/noun_time.png\" /></Col>\n                                        <Col xs={9}><a className=\"menu-information\" href=\"#/hours-report\" onClick={() => { setShowMenu(!showMenu); }}>דיווח שעות</a></Col>\n                                    </Row>\n                                    <div className=\"divider\" />\n                                    <Row>\n                                        <Col className=\"flex\" xs={3}><img alt=\"\" className=\"icon4\" src=\"images/noun_check_box.png\" /></Col>\n                                        <Col xs={9}><a className=\"menu-information\" href=\"#/hours-approve\" onClick={() => { setShowMenu(!showMenu); }}>אישור שעות</a></Col>\n                                    </Row>\n                                    <div className=\"divider\" />\n                                    <div className=\"sidebar-logout\">\n                                        <Row>\n                                            <Col className=\"flex\" xs={3}><img alt=\"\" className=\"icon5\" src=\"images/noun_off.png\" /></Col>\n                                            <Col xs={9}><a className=\"menu-information\" href=\"#\" onClick={handleLogout}>התנתקות</a></Col>\n                                        </Row>\n                                    </div>\n                                </Container>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PortalNavbar;\n\n","import React, { useState } from \"react\";\nimport \"./search.css\";\n\n// Generic component to search and page between results.\n\n// PROPS:\n//  placeholder. string. the placeholder string for the search input\n//  pages. number. the total number of pages the user can page through.\n//         If this number is 0 do not render the paging on the left.\n//  handleSearch. callback function. Gets called when the user submits (press enter)\n//                on the search input. Sends the input text.\n//  const handleSearch = searchInput => {\n//  console.log(searchInput);\n//  };\n//  pageChange. callback function. Gets called when the user clicks on the page arrows.\n//              Sends the new page number.\n//  const pageChange = currPage => {\n//  console.log(currPage);\n//  };\n\n//  Used in: USERS PAGE, COURSES PAGE\n\nconst PortalSearchPager = props => {\n  const { placeholder, pages, handleSearch, pageChange, currentPage } = props;\n  const [input, setInput] = useState(\"\");\n  // const [currPage, setCurrPage] = useState(currentPage);\n\n  //   Sets 50% opacity to the next/prev page buttons if the currPage is the first or the last page\n  let prevPageClasses = [\"prev-page\"];\n  if (currentPage === 0) prevPageClasses.push(\"disabled\");\n\n  let nextPageClasses = [\"prev-page\"];\n  if (currentPage === pages) nextPageClasses.push(\"disabled\");\n\n  // Function that sends the input value as a callback to the parent component\n  const ifEnterPressed = ev => {\n    if (ev.keyCode === 13) {\n      handleSearch(input);\n    }\n  };\n\n  // Function that sends the currPage value as a callback to the parent component\n  // after pressing the nex page button\n  const increasePageIndicator = () => {\n    if (currentPage < pages) {\n      const newCurrentPage = currentPage + 1;\n      pageChange(newCurrentPage);\n    }\n  };\n\n  // Function that sends the currPage value as a callback to the parent component\n  // after pressing the nex page button\n  const decreasePageIndicator = () => {\n    if (currentPage > 0) {\n      const newCurrentPage = currentPage - 1;\n      pageChange(newCurrentPage);\n    }\n  };\n\n  let pageIndicator =\n    pages && pages > 1 ? (\n      <div className=\"absolute\">\n        <div className=\"page-indicator\">\n          <img\n            alt=\"Previous Page\"\n            src=\"images/arrow-right.png\"\n            className={prevPageClasses.join(\" \")}\n            onClick={decreasePageIndicator}\n          />\n          <div className=\"currPage\">{currentPage + 1}</div>\n          <img\n            alt=\"Next Page\"\n            src=\"images/arrow-left.png\"\n            className={nextPageClasses.join(\" \")}\n            onClick={increasePageIndicator}\n          />\n        </div>\n      </div>\n    ) : null;\n\n  return (\n    <div className=\"c-search\">\n      <div className=\"search-comp\">\n        <input\n          className=\"search-input\"\n          value={input}\n          type=\"text\"\n          placeholder={placeholder}\n          onChange={ev => setInput(ev.target.value)}\n          onKeyDown={ev => ifEnterPressed(ev)}\n          // autoFocus\n        />\n        {pageIndicator}\n      </div>\n    </div>\n  );\n};\n\nexport default PortalSearchPager;\n","import React, { Component } from 'react';\nimport './PortalTable.css';\n\n\nexport default class PortalTable extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render(){\n        //headers - array of the headers that this table should show\n        //data - array of all the row's data, not only what's in the specific header\n        //handleClick - calling the function that handles a click on a row\n        const { headers, data ,handleClick} = this.props;\n\n        if (!headers || !data) {\n            return null;\n        }\n\n        let headerRow = [];\n        for(let i=0 ; i<headers.length ; i++){\n            headerRow.push(<th key={i}>{headers[i].header}</th>);\n        }\n        let rows = [];\n        for(let i=0 ; i<data.length ; i++){\n            let currentRow = [];\n            for(let j=0 ; j<headers.length ; j++){\n                let currentData;\n                if(data[i][headers[j].key]) {\n                    currentData = <td key={j}>{data[i][headers[j].key]}</td>;\n                } else {\n                    currentData = <td key={j}></td>;\n                }\n                currentRow.push(currentData);\n            }\n            rows.push(<tr key={i} className=\"tableRow\" onClick={() => handleClick(data[i])}>{currentRow}</tr>);\n        }\n        return(\n            <table className=\"mainTable\">\n                <thead>\n                    <tr className=\"headerRow\">\n                        {headerRow}\n                    </tr>\n                </thead>\n                <tbody>\n                   {rows}\n                </tbody>\n            </table>\n        )\n    }\n}","/** @format */\n\nimport React from \"react\";\nimport \"./PortalButtonSet.css\";\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\n\n// Props:\n// - buttons[]. Array of objects. Each object has a \"key\" and a \"label\"\n// - activeKey [String] - indicating which button is active (First Button by default)\n// - handleClick. callback function. invoked when the user clicks on one of the buttons,\n//      it sends the object of the clicked button\n\nconst PortalButtonSet = props => {\n  const { buttons, handleClick, activeKey } = props;\n  // Mapping buttons[] to JSX items\n  let buttonsComp = buttons.map(item => {\n    // activeButton Logic\n    let activeBtnClass = (activeKey === item.key) ? \" active\" : \"\";\n    return (\n      <Col className=\"c-buttonCol\">\n        <Button\n          key={item.key}\n          type=\"button\"\n          className={\"btn\" + activeBtnClass}\n          variant=\"transparent\"\n          bg=\"white\"\n          onClick={() => handleClick(item)}\n        >\n          {item.label}\n        </Button>\n      </Col>\n    );\n  });\n\n\n\n  return (\n    <Container className=\"c-portalButtonSet\" fluid>\n      <Row className=\"justify-content-md-center\">{buttonsComp}</Row>\n    </Container>\n  );\n};\n\nexport default PortalButtonSet;","import React, { useContext, useState, useEffect } from \"react\";\nimport \"./courses.css\";\nimport PortalNavbar from \"../../components/navbar/PortalNavbar\";\nimport ActiveUserContext from \"../../shared/activeUserContext\";\nimport { Redirect } from \"react-router-dom\";\nimport PortalSearchPager from \"../../components/search/PortalSearchPager\";\nimport PortalTable from \"../../components/TableComponent/PortalTable\";\nimport PortalButtonSet from \"../../components/navbar/PortalButtonSet\";\nimport server from \"../../shared/server\";\nimport PortalMultipleSelect from \"../../components/PortalMultipleSelect/PortalMultipleSelect\";\n\nconst CoursesPage = props => {\n  const { handleLogout } = props;\n  const activeUser = useContext(ActiveUserContext);\n  const [activeKey, setActiveKey] = useState(1);\n  const [selectedCourseId, setselectedCourseId] = useState(\"\");\n  const [courseSearchString, setCourseSearchString] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [serverData, setServerData] = useState([]);\n  const [pages, setPages] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const CoursesData = {\n        search: courseSearchString,\n        sorting: \"courseid\",\n        desc: false,\n        coursestatus: activeKey,\n        page: currentPage\n      };\n      server(activeUser, CoursesData, \"SearchCourses\").then(\n        res => {\n          console.log(res);\n          setServerData(res.data.courses);\n          setPages(res.data.pages);\n\n          if (res.data.error) {\n            alert(\"error in login\");\n          } else {\n            // handleLogin(res.data);\n          }\n        },\n        err => {\n          console.error(err);\n        }\n      );\n    };\n    if (activeUser) {\n      fetchData();\n    }\n  }, [activeUser, currentPage, activeKey, courseSearchString]);\n\n  //\n\n  if (!activeUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const selectedCourseUrl = \"/courses/\" + selectedCourseId;\n\n  if (selectedCourseId) {\n    return <Redirect to={selectedCourseUrl} />;\n  }\n\n  const handleSearch = searchInput => {\n    setCurrentPage(0);\n    setCourseSearchString(searchInput);\n  };\n\n  const pageChange = newCurrentPage => {\n    setCurrentPage(newCurrentPage);\n  };\n\n  const headers = [\n    { key: \"subname\", header: \"שם קורס מקוצר\" },\n    { key: \"project\", header: \"פרויקט\" },\n    { key: \"teachers\", header: \"מדריך\" }\n  ];\n\n  const buttons = [\n    { key: 1, label: \"קורסים פעילים\" },\n    { key: 0, label: \"לא פעילים\" }\n  ];\n\n  const handleActiveBtnClick = btnClicked => {\n    setCurrentPage(0);\n    setActiveKey(btnClicked.key);\n  };\n\n  const handleCourseSelect = courseSelected => {\n    setselectedCourseId(courseSelected.courseid);\n  };\n\n  return (\n    <div className=\"p-courses\">\n      <PortalNavbar handleLogout={handleLogout} />\n      <PortalSearchPager\n        placeholder={\"חיפוש קורס\"}\n        pages={pages}\n        currentPage={currentPage}\n        handleSearch={handleSearch}\n        pageChange={pageChange}\n      />\n      <div className=\"table\">\n        <PortalTable\n          headers={headers}\n          data={serverData}\n          handleClick={handleCourseSelect}\n        />\n      </div>\n      <PortalButtonSet\n        buttons={buttons}\n        handleClick={handleActiveBtnClick}\n        activeKey={activeKey}\n      />\n    </div>\n  );\n};\n\nexport default CoursesPage;\n","import React, { useContext } from 'react';\nimport './courses.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport ActiveUserContext from '../../shared/activeUserContext'\nimport { Redirect } from 'react-router-dom'\n\nconst CourseDetailsPage = (props) => {\n    const { handleLogout } = props;\n    const activeUser = useContext(ActiveUserContext);\n    \n    if (!activeUser) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div>\n            <PortalNavbar handleLogout={handleLogout}/>\n            <h1>פרטי קורס</h1>\n        </div>\n    );\n}\n\nexport default CourseDetailsPage;","import React, {useContext, useState, useEffect} from 'react';\nimport './users.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport ActiveUserContext from '../../shared/activeUserContext';\nimport {Redirect} from 'react-router';\nimport PortalTable from \"../../components/TableComponent/PortalTable\";\nimport PortalSearchPager from '../../components/search/PortalSearchPager'\nimport PortalButtonSet from '../../components/navbar/PortalButtonSet'\nimport server from '../../shared/server'\nimport {getApiName, getHeaders} from '../../utils/utils'\n\nconst UsersPage = (props) => {\n    const {handleLogout} = props;\n    const apiName = getApiName(props.location.search.substring(1));\n    const activeUser = useContext(ActiveUserContext);\n\n\n    //state\n    const [data, setData] = useState([]);\n    const [pageNum, setPageNum] = useState(0);\n    const [headers, setHeaders] = useState(getHeaders());\n    const [userStatus, setUserStatus] = useState(1);\n    const [searchString, setSearchString] = useState(\"\");\n\n\n    //inner functions\n    //fetch data from db\n    useEffect(\n        () => {\n            const fetchData = async () => {\n                await server(activeUser, createPayload(), apiName).then(res => {\n                    console.log(res);\n                    if (res.data.error) {\n                        alert(\"error in login\");\n                    } else {\n                        setData(res.data);\n                    }\n                }, err => {\n                    console.error(err);\n                });\n            };\n            fetchData().then(() => console.log('found data')).catch(err => console.log(err));\n        }, [userStatus, pageNum, searchString]);\n\n    if (!activeUser) {\n        return <Redirect to='/'/>\n    }\n\n    const handleSearch = (searchString) => {\n        setSearchString(searchString);\n        setPageNum(0);\n    };\n\n    const handleUserType = (item) => {\n        setUserStatus(item.key);\n        setPageNum(0);\n        setSearchString(\"\");\n    };\n\n    const callPageData = (index) => {\n        setPageNum(index);\n    };\n\n    const createPayload = () => {\n        return {\"search\": searchString, \"sorting\": \"userid\", \"desc\": false, \"userstatus\": userStatus, \"page\": pageNum};\n    };\n\n    // let num = data;\n    // debugger\n    if (!data.users && pageNum >= 0) {\n        //hack -- need to verify implementation\n        return <div></div>\n    }\n\n    const clickOnRow = (e) => {\n\n\n        props.history.push({\n            pathname: `/users/${e.userid}`,\n            state: {userid: e.userid}\n        });\n    };\n\n\n    return (\n        <div>\n            <PortalNavbar handleLogout={handleLogout}/>\n            <h1>משתמשים</h1>\n            <PortalSearchPager placeholder='חיפוש משתמש' handleSearch={(e) => handleSearch(e)} pages={data.pages}\n                               pageChange={(index) => callPageData(index)} currentPage={pageNum}>search\n                bar</PortalSearchPager>\n            <PortalTable headers={headers} data={data.users} handleClick={(e) => clickOnRow(e)}>blah</PortalTable>\n            <PortalButtonSet buttons={[{key: 1, label: 'פעילים'}, {key: 0, label: 'לא פעילים'}]}\n                             handleClick={(item) => handleUserType(item)} activeKey={userStatus}>blah</PortalButtonSet>\n        </div>\n    );\n};\n\nexport default UsersPage;","function getApiName(userType) {\n    const mappedApi = {\n        'staff': 'SearchStaffUnderMe',\n        'newUsers': 'SearchNewUsers',\n        'students': 'SearchStudentsUnderMe'\n    };\n    return mappedApi[userType] == null ? mappedApi['staff'] : mappedApi[userType];\n}\n\n\nfunction getHeaders() {\n    return [{key: \"userid\", header: \"מס' מזהה\"}, {\n        key: \"firstname\",\n        header: \"שם פרטי\"\n    }, {\n        key: \"lastname\",\n        header: \"שם משפחה\"\n    }, {key: 'email', header: 'דוא\"ל'}]\n}\n\nexport {getApiName,getHeaders};","/** @format */\n\nimport React, { useState } from \"react\";\nimport \"../components/PortalInput.css\";\n\n// <PortalInput/> Component Props:\n//  - inputTitle (String) - will be rendering the Title Lable  - *not Required\n//  - inputPlaceholder (String) - will be rendering the input Placeholder\n//  - handleChange () - callback from Parent page/component\n\n const PortalInput = (props) => {\n  const {inputTitle, inputPlaceholder, handleChange} = props;\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <div className=\"c-portal-input\">\n      <label className=\"c-portal-input-label\">{inputTitle}</label>\n      <input\n        className=\"c-portal-input-element\"\n        value={inputValue}\n        placeholder={inputPlaceholder}\n        onChange={event => {\n          setInputValue(event.target.value);\n          handleChange(event.target.value);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PortalInput;\n","import React, { useContext } from 'react';\nimport './users.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport ActiveUserContext from '../../shared/activeUserContext'\nimport { Redirect } from 'react-router-dom'\nimport PortalInput from '../../components/PortalInput'\n\nconst UserDetailsPage = (props) => {\n    const { handleLogout } = props;\n    const activeUser = useContext(ActiveUserContext);\n    if (!activeUser) {\n        return <Redirect to='/' />\n    }\n    const userid = props.history.location.state.userid;\n\n    return (\n        <div>\n            <PortalNavbar handleLogout={handleLogout}/>\n            <h1>פרטי משתמש</h1>\n            <div>{userid}</div>\n            <div>\n                <PortalInput inputTitle={'test'} inputValue={'input'} ></PortalInput>\n                <PortalInput inputTitle={'test'} inputValue={'input'} ></PortalInput>\n                <PortalInput inputTitle={'test'} inputValue={'input'} ></PortalInput>\n                <PortalInput inputTitle={'test'} inputValue={'input'} ></PortalInput>\n                <PortalInput inputTitle={'test'} inputValue={'input'} ></PortalInput>\n                <PortalInput inputTitle={'test'} inputValue={'input'} ></PortalInput>\n                <PortalInput inputTitle={'test'} inputValue={'input'} ></PortalInput>\n            </div>\n        </div>\n    );\n}\n\nexport default UserDetailsPage;","import React, {useState} from 'react';\nimport './HoursReport.css'\nimport './date.format'\n\nconst HoursReport = (props) => {\n    // Declare a new state variable, which we'll call \"count\" const [count,\n    // setCount] = useState(0);\n    const {report} = props;\n    // <p>You clicked {count}times</p> <button onClick={() => setCount(count + 1)}>\n    //    Click me </button>\n\n    function createDateObject(value) {\n        try {\n            return new Date(value.split('/').reverse().join('/'));\n        }\n        catch(e) {\n            return null;\n        }\n    }\n\n\n    const startHour = new Date(\"January 1 2000 \" + report.starthour);\n    const finishhour = new Date(\"January 1 2000 \" + report.finishhour);\n    const timeDiff = new Date(finishhour-startHour);\n    const date = createDateObject(report.date);\n    let row_class;\n    switch(report.approval){\n        case \"-1\": row_class=\"not-approved\";\n        break;\n        case \"0\": row_class=\"waiting\";\n        break;\n        case \"1\": row_class=\"approved\";\n        break;\n    }\n\n    let row_style = {\n        margin : \"5px\",\n        width : \"100%\"\n    };\n\n    return (\n        <tr className={row_class} style={row_style} >\n            <td>{date.format(\"dd.mm.yy\")}</td>\n            <td>{report.projectid}</td>\n            <td>{report.actionid}</td>\n            <td>{timeDiff.format(\"hh:MM\")}</td> \n        </tr>\n    );\n}\n\nexport default HoursReport;","import React, {useState} from 'react';\nimport './HoursReportTable.css'\nimport HoursReport from './HoursReport';\n\n\nconst HoursReportTable = (props) => {\n    // Declare a new state variable, which we'll call \"count\"\n    // const [count, setCount] = useState(0);\n    const [reports, setReports] = useState(props.reports);\n    \n    // <p>You clicked {count}times</p>\n    // <button onClick={() => setCount(count + 1)}>\n    //     Click me\n    // </button>\n\n    let jsxReports=[];\n    reports.forEach(report => {\n        jsxReports.push(<HoursReport report={report}/>);\n    });\n\n    return (\n        <div>\n            <h1>דיווח שעות</h1>\n            <table className=\"hours-report-table\">\n                <thead>\n                    <tr>\n                        <th>תאריך</th>\n                        <th>פרויקט</th>\n                        <th>נושא פעילות</th>\n                        <th>סה\"כ שעות</th>                        \n                    </tr>\n                </thead>\n                <tbody>\n                    {jsxReports}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default HoursReportTable;","import React, { useContext } from 'react';\nimport './hours.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport ActiveUserContext from '../../shared/activeUserContext'\nimport { Redirect } from 'react-router-dom'\nimport HoursReportTable from '../../components/hours/HoursReportTable'\nimport jsonReports from './Reports.json';\n\n\nconst HoursReportPage = (props) => {\n    const { handleLogout } = props;\n    const activeUser = useContext(ActiveUserContext);\n    \n    if (!activeUser) {\n        return <Redirect to='/' />\n    }\n\n    let reports =jsonReports;\n\n    return (\n        <div>\n            <PortalNavbar handleLogout={handleLogout}/>\n            <HoursReportTable reports={reports}/>\n        </div>\n    );\n}\n\nexport default HoursReportPage;","import React from 'react';\nimport { Form, Button} from 'react-bootstrap'\nimport { useState } from 'react';\nimport \"./ReportedHoursDetailsItem.css\"\n\nconst ReportedHoursDetailsItem = (props) => {\n    \n    return (\n        <div className=\"c-reported-hours-details-item\">      \n            <div className=\"radio-action\">\n                <div>\n                    <input type=\"radio\" id=\"test3\" name=\"radio-group\"/>\n                    <label className=\"approved\" for=\"test3\">אשר<div className=\"radio approved\"><span></span></div></label>\n                </div>\n                <div>\n                    <input type=\"radio\" id=\"test2\" name=\"radio-group\"/>\n                    <label className=\"pending\" for=\"test2\">ממתין<div className=\"radio pending\"><span></span></div></label>\n                </div>\n                <div >    \n                    <input type=\"radio\" id=\"test1\" name=\"radio-group\"/>\n                    <label className=\"rejected\" for=\"test1\">דחה<div className=\"radio rejected\"><span></span></div></label>\n                </div>\n               \n            </div>\n            <div className=\"data\"></div>\n\n        </div>\n    );\n}\n\nexport default ReportedHoursDetailsItem;","import React from 'react';\nimport { useState } from 'react';\nimport './WorkerHoursReportingItem.css'\n\nconst WorkerHoursReportingItem = (props) => {\n\n    const [pendingHours,setPendingHours]=useState(0);\n    const [approvedHours,setApprovedHours]=useState(0);\n    const [rejectedHours,setRejectedHours]=useState(0);\n    const [totalHours,setTotalHours]=useState(0);\n\n    return (\n        <div className=\"c-worker-hours-reporting-item\">\n            <div className=\"worker-name\" >שם עובד</div>\n            <div className=\"worker-params\">\n                <div className=\"d-inline-block hours-total\">150</div>\n                <div className=\"d-inline-block hours-rejected\">50</div>\n                <div className=\"d-inline-block hours-approved\">50</div>\n                <div  className=\"d-inline-block hours-pending\">50</div>              \n                <div className=\"d-inline-block\">\n                    <img className=\"open\" src=\"images/arrow-down.png\" alt=\"open\"></img>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default WorkerHoursReportingItem;","import React from 'react';\nimport { ButtonGroup } from 'react-bootstrap'\nimport { useState } from 'react';\nimport './PortalDayMonthPickerComponent.css'\n\n\n\n// gets two optional props:\n//date- the date to initialyy display, if not passed, show the current day\n//type- the selector type :\"day\" or \"month\", default is \"month\"\nconst PortalDayMonthPickerComponent = (props) => {\n    \n    const initialDate = props.date ? props.date : new Date();\n    const displayType=props.type?props.type:\"month\";\n    const [theDateToShow,setTheDateToShow]=useState(initialDate)\n    const months= [\"ינואר\",\"פברואר\",\"מרץ\",\"אפריל\",\"מאי\",\"יוני\",\"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\",\"דצמבר\"]\n\n    // format of the date that will be shown on screen\n    const showText=(aDate)=>\n    {\n        if (displayType===\"day\")\n        { \n           return aDate.toLocaleDateString('en-GB') ;\n        }\n        else{\n            return months[aDate.getMonth()] +\" \"+aDate.getFullYear() ;\n        }\n        \n    }\n\n    const addMonth=()=>\n    {\n        var currentMonth=theDateToShow.getMonth();\n        var currentYear=theDateToShow.getFullYear();\n        var newDate = new Date(theDateToShow.getTime());\n        if (currentMonth<11)  // from 0-11\n        {\n            newDate.setMonth(currentMonth+1);\n        }\n        else{\n            newDate.setFullYear(currentYear+1);\n            newDate.setMonth(0);\n        }\n        setTheDateToShow(newDate);\n   }\n\n    const removeMonth=()=>\n    {\n        var currentMonth=theDateToShow.getMonth();\n        var currentYear=theDateToShow.getFullYear();\n        var newDate=new Date(theDateToShow.getTime());;\n\n        if (currentMonth>0) // from 0-11\n        {\n            newDate.setMonth(currentMonth-1);\n        }\n        else{\n            newDate.setFullYear(currentYear-1);\n            newDate.setMonth(11);\n        }\n        setTheDateToShow(newDate);\n\n    }\n    const addDay=()=>\n    {\n        var newDate = new Date(theDateToShow.getTime());\n        newDate.setDate(newDate.getDate() + 1);\n        setTheDateToShow(newDate);\n\n    }\n    const removeDay=()=>\n    {\n        var newDate = new Date(theDateToShow.getTime());\n        newDate.setDate(newDate.getDate() - 1);\n        setTheDateToShow(newDate);\n        \n    }\n\n\n    const handleMinusClick=()=>\n    {\n        if (displayType===\"day\")\n        {\n            removeDay(); \n        }\n        else{\n            removeMonth();\n        }\n             \n    }\n\n\n    const handlePlusClick=()=>\n    {\n        if (displayType===\"day\")\n        {\n            addDay();\n        }\n        else{\n            addMonth();\n        }\n\n    }\n\n\n    return (\n        <div className=\"c-day-month-picker\">\n        <ButtonGroup aria-label=\"Basic example\">\n            <div onClick={() =>handleMinusClick() } >\n                <img src=\"images/arrow-right.png\" alt=\"-\" ></img>\n            </div>\n            <div className=\"date-text\" >{showText(theDateToShow)}</div>\n            <div  onClick={() => { handlePlusClick() }}>\n                <img src=\"images/arrow-left.png\" alt=\"+\"></img>\n            </div>\n        </ButtonGroup>\n        </div>\n    );\n}\n\nexport default PortalDayMonthPickerComponent;","import React, { useContext } from 'react';\n\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport ActiveUserContext from '../../shared/activeUserContext'\nimport PortalSearchPager from \"../../components/search/PortalSearchPager\";\nimport ReportedHoursDetailsItem from \"./ReportedHoursDetailsItem\";\nimport WorkerHoursReportingItem from \"./WorkerHoursReportingItem\";\nimport { Redirect } from 'react-router-dom'\nimport PortalDayMonthPickerComponent from '../../components/PortalDayMonthPickerComponent/PortalDayMonthPickerComponent';\nimport { Accordion,Card,Button } from 'react-bootstrap'\nimport './hoursApprovePage.css'\n\nconst HoursApprovePage = (props) => {\n    const { handleLogout } = props;\n    const activeUser = useContext(ActiveUserContext);\n\n    if (!activeUser) {\n        return <Redirect to='/' />\n    }\n\n\n\n    return (\n        <div className=\"p-hours-approve-page\">\n            <PortalNavbar  handleLogout={handleLogout}/>\n            <PortalDayMonthPickerComponent className=\"month-picker\" date={new Date('1/1/1960')}></PortalDayMonthPickerComponent>\n            <PortalSearchPager  placeholder={\"חיפוש עובד\"}></PortalSearchPager>\n            <Accordion>\n                <Card>\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                    <WorkerHoursReportingItem ></WorkerHoursReportingItem>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                        <ReportedHoursDetailsItem></ReportedHoursDetailsItem>\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                    <WorkerHoursReportingItem ></WorkerHoursReportingItem>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"1\">\n                    <Card.Body>Hello! I'm another body</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n                        \n        </div>\n    );\n}\n\nexport default HoursApprovePage;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport { Switch, Route } from 'react-router-dom'\nimport LoginPage from './pages/login/LoginPage'\nimport CoursesPage from './pages/courses/CoursesPage'\nimport CourseDetailsPage from './pages/courses/CourseDetailsPage'\nimport UsersPage from './pages/users/UsersPage'\nimport UserDetailsPage from './pages/users/UserDetailsPage'\nimport HoursReportPage from './pages/hours/HoursReportPage'\nimport HoursApprovePage from './pages/hours/HoursApprovePage'\nimport ActiveUserContext from './shared/activeUserContext'\n\nimport './App.css';\n\nconst App = () => {\n\n  const [activeUser, setActiveUser] = useState(localStorage.activeUser ? JSON.parse(localStorage.activeUser) : null);\n\n  const handleLogin = (activeUser) => {\n    setActiveUser(activeUser);\n    localStorage.activeUser = JSON.stringify(activeUser);\n  }\n\n  const handleLogout = () => {\n    setActiveUser(null);\n    localStorage.removeItem(\"activeUser\");\n  }\n\n  return (\n    <ActiveUserContext.Provider value={activeUser}>\n      <Switch>\n        <Route exact path=\"/\">\n          <LoginPage handleLogin={handleLogin} />\n        </Route>\n        <Route exact path=\"/courses\">\n          <CoursesPage handleLogout={handleLogout}/>\n        </Route>\n        <Route path=\"/courses/:id\">\n          <CourseDetailsPage handleLogout={handleLogout}/>\n        </Route>\n        <Route exact path=\"/users\" render={ props => <UsersPage {...props}/>}/>\n        <Route path=\"/users/:id\" render={ props => <UserDetailsPage {...props} handleLogout={handleLogout}/>}>\n        </Route>\n        <Route path=\"/hours-report\">\n          <HoursReportPage handleLogout={handleLogout}/>\n        </Route>\n        <Route path=\"/hours-approve\">\n          <HoursApprovePage handleLogout={handleLogout}/>\n        </Route>\n      </Switch>\n    </ActiveUserContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}