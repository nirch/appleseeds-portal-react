{"version":3,"sources":["logo.svg","components/hours/date.format.js","shared/server.js","shared/activeUserContext.js","components/ShowAlert/ShowAlert.js","pages/login/LoginPage.js","components/navbar/PortalNavbar.js","components/search/PortalSearchPager.jsx","components/TableComponent/PortalTable.js","components/navbar/PortalButtonSet.js","pages/courses/CoursesPage.js","components/PortalTabView/PortalTabView.js","components/PortalInput.js","components/PortalInputSelect/PortalInputSelect.js","components/PortalMultipleSelect/PortalMultipleSelect.jsx","pages/courses/Tabs/Profile/CourseProfile.js","components/PortalCoursesView/PortalCoursesView.js","pages/courses/CourseDetailsPage.js","pages/users/UsersPage.js","utils/utils.js","components/userComponents/UserProfile.jsx","components/PortalHeaderView/PortalHeaderView.js","pages/users/UserDetailsPage.js","components/hours/HoursReport.js","components/hours/HoursReportTable.js","components/PortalDayMonthPickerComponent/PortalDayMonthPickerComponent.js","components/hours/PlusButtonTool.js","components/hours/ToolBarFooter.js","pages/hours/HoursReportPage.js","pages/hours/ReportedHoursDetailsItem.jsx","pages/hours/WorkerHoursReportingItem.jsx","pages/hours/HoursApprovePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","dateFormat","token","timezone","timezoneClip","pad","val","len","String","length","date","mask","utc","dF","arguments","Object","prototype","toString","call","test","undefined","Date","isNaN","SyntaxError","masks","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","flags","dd","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","tt","T","TT","Z","match","pop","replace","floor","abs","S","$0","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","format","this","activeUser","data","type","a","v","request","method","url","phpDomain","JSON","stringify","headers","axios","response","server","ActiveUserContext","React","createContext","ShowAlert","props","p_Text","handleClose","colorstyle","color","imgsrc","className","src","style","onClick","LoginPage","handleLogin","useState","email","setEmail","textError","setTextError","pwd","setPwd","useContext","to","showerror","Container","onSubmit","e","preventDefault","pass","then","res","console","log","error","err","noValidate","value","placeholder","onChange","target","setEmailCleanError","setPassCleanError","PortalNavbar","handleLogout","handleBack","navbarTitle","navbarArrow","showUsersTypes","setShowUsersTypes","showMenu","setShowMenu","serverData","setServerData","useEffect","firstname","lastname","image","userid","alert","fetchData","userProfileFullName","userProfilePic","userProfilePicLink","openMenu","showHideDivClasses","arrowDivClasses","hamburgerView","backarrowView","class","backArrowShow","userProfilePicView","hrefUsersLink","Row","alt","href","Col","xs","id","PortalSearchPager","pages","handleSearch","pageChange","currentPage","input","setInput","prevPageClasses","push","nextPageClasses","pageIndicator","join","ev","onKeyDown","keyCode","ifEnterPressed","PortalTable","handleClick","headerRow","i","key","header","rows","currentRow","j","currentData","Component","PortalButtonSet","buttons","activeKey","buttonsComp","map","item","activeBtnClass","Button","variant","bg","label","fluid","CoursesPage","setActiveKey","selectedCourseId","setselectedCourseId","courseSearchString","setCourseSearchString","setCurrentPage","setPages","search","sorting","desc","coursestatus","page","courses","selectedCourseUrl","searchInput","newCurrentPage","courseSelected","courseid","btnClicked","PortalTabView","tabsObj","indexOfTab","setActiveTab","tabView","tabContent","view","tabObj","index","classOfNav","data-toggle","role","aria-controls","aria-selected","PortalInput","inputTitle","inputPlaceholder","inputValue","handleChange","event","PortalInputSelect","options","optionsKey","handleSelection","selectInputOptions","labelOn","PortalMultipleSelect","displaySelectList","hideSelectList","selectedOptions","addOption","deleteOption","deleteAllOptions","optionsSelect","option","eventkey","selectedOptionsButtons","button","showHideSelectList","CourseProfile","courseId","courseName","setCourseName","hebrewShortName","setHebrewShortName","arabShortName","setarabShortName","project","setProject","projectList","setProjectList","tagsSelected","setTagsSelected","tagsList","setTagsList","setHideSelectList","city","setCity","cityList","setCityList","budgetYear","setBudgetYear","budgetYearList","setBudgetYearList","instructer","setInstructer","name","subname","subnameinarabic","projectid","cityid","yearbudgetid","primaryTeacherName","x","forEach","projectname","tags","projecttags","year","projectObj","find","currProject","tag","projecttagid","projecttagname","concat","splice","tempOption","cloneList","PortalCourseView","CourseDetailsPage","pageBack","setPageBack","useParams","UsersPage","apiName","userType","mappedApi","getApiName","location","substring","setData","pageNum","setPageNum","userStatus","setUserStatus","searchString","setSearchString","createPayload","catch","callPageData","users","history","pathname","state","user","clickOnRow","handleUserType","UserProfile","profile","setProfile","cities","setCities","genders","setGenders","religions","setReligions","getUserProfileById","userId","getCities","getGenders","genderid","getReligions","religionid","Promise","all","values","firstnameinarabic","lastnameinarabic","phone","phone2","phone2owner","superstaffname","tznumber","birthday","address","PortalHeaderView","empImg","setemImg","employeeName","setemployeeName","employeeRegD","setemployeeRegD","employeeFamily","setemployeeFamily","myObj","registerdate","for","UserDetailsPage","HoursReport","report","row_class","split","reverse","createDateObject","approval","margin","width","projectName","subject","direction","totalTime","HoursReportTable","reports","noReportsLabel","jsxReports","PortalDayMonthPickerComponent","aDate","initialDate","displayType","theDateToShow","setTheDateToShow","months","handleMinusClick","newDate","getTime","setDate","getDate","removeDay","currentMonth","getMonth","currentYear","getFullYear","setMonth","setFullYear","removeMonth","handlePlusClick","addDay","addMonth","ButtonGroup","aria-label","onShowDate","toLocaleDateString","PlusButtonTool","ToolBarFooter","HoursReportPage","setReports","perimeter","setPerimeter","showDate","setShowDate","totalMilliseconds","setTotalMilliseconds","requestData","month","timeCount","projectData","subjectData","subjects","reportsubjectid","actionid","startHour","starthour","timeMilliseconds","finishhour","hours","minutes","totalHoursHeader","ReportedHoursDetailsItem","reportedHoursObject","changeStatus","returnClassType","status","checked","activitySubject","WorkerHoursReportingItem","workerDetails","pendingHours","approvedHours","rejectedHours","totalHours","HoursApprovePage","currentWorker","setCurrentWorker","allWorkers","setAllWorkers","setWorkersSearchString","currentShownDate","setCurrentShownDate","setReportsData","workersArray","obj","reportedHoursArray","worker","element","reportid","parseInt","noOfHours","reportId","newStatus","reportids","checkdate2","reportsCopy","currReport","accordionBody","accordionItems","Card","Accordion","Toggle","as","Header","eventKey","Collapse","Body","App","localStorage","parse","setActiveUser","removeItem","Provider","exact","path","render","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbaa55d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nvar dateFormat = function () {\n\tvar\ttoken = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\n\t\ttimezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n\t\ttimezoneClip = /[^-+\\dA-Z]/g,\n\t\tpad = function (val, len) {\n\t\t\tval = String(val);\n\t\t\tlen = len || 2;\n\t\t\twhile (val.length < len) val = \"0\" + val;\n\t\t\treturn val;\n\t\t};\n\n\t// Regexes and supporting functions are cached through closure\n\treturn function (date, mask, utc) {\n\t\tvar dF = dateFormat;\n\n\t\t// You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n\t\tif (arguments.length == 1 && Object.prototype.toString.call(date) == \"[object String]\" && !/\\d/.test(date)) {\n\t\t\tmask = date;\n\t\t\tdate = undefined;\n\t\t}\n\n\t\t// Passing date through Date applies Date.parse, if necessary\n\t\tdate = date ? new Date(date) : new Date;\n\t\tif (isNaN(date)) throw SyntaxError(\"invalid date\");\n\n\t\tmask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\n\n\t\t// Allow setting the utc argument via the mask\n\t\tif (mask.slice(0, 4) == \"UTC:\") {\n\t\t\tmask = mask.slice(4);\n\t\t\tutc = true;\n\t\t}\n\n\t\tvar\t_ = utc ? \"getUTC\" : \"get\",\n\t\t\td = date[_ + \"Date\"](),\n\t\t\tD = date[_ + \"Day\"](),\n\t\t\tm = date[_ + \"Month\"](),\n\t\t\ty = date[_ + \"FullYear\"](),\n\t\t\tH = date[_ + \"Hours\"](),\n\t\t\tM = date[_ + \"Minutes\"](),\n\t\t\ts = date[_ + \"Seconds\"](),\n\t\t\tL = date[_ + \"Milliseconds\"](),\n\t\t\to = utc ? 0 : date.getTimezoneOffset(),\n\t\t\tflags = {\n\t\t\t\td:    d,\n\t\t\t\tdd:   pad(d),\n\t\t\t\tddd:  dF.i18n.dayNames[D],\n\t\t\t\tdddd: dF.i18n.dayNames[D + 7],\n\t\t\t\tm:    m + 1,\n\t\t\t\tmm:   pad(m + 1),\n\t\t\t\tmmm:  dF.i18n.monthNames[m],\n\t\t\t\tmmmm: dF.i18n.monthNames[m + 12],\n\t\t\t\tyy:   String(y).slice(2),\n\t\t\t\tyyyy: y,\n\t\t\t\th:    H % 12 || 12,\n\t\t\t\thh:   pad(H % 12 || 12),\n\t\t\t\tH:    H,\n\t\t\t\tHH:   pad(H),\n\t\t\t\tM:    M,\n\t\t\t\tMM:   pad(M),\n\t\t\t\ts:    s,\n\t\t\t\tss:   pad(s),\n\t\t\t\tl:    pad(L, 3),\n\t\t\t\tL:    pad(L > 99 ? Math.round(L / 10) : L),\n\t\t\t\tt:    H < 12 ? \"a\"  : \"p\",\n\t\t\t\ttt:   H < 12 ? \"am\" : \"pm\",\n\t\t\t\tT:    H < 12 ? \"A\"  : \"P\",\n\t\t\t\tTT:   H < 12 ? \"AM\" : \"PM\",\n\t\t\t\tZ:    utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\n\t\t\t\to:    (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n\t\t\t\tS:    [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\n\t\t\t};\n\n\t\treturn mask.replace(token, function ($0) {\n\t\t\treturn $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n\t\t});\n\t};\n}();\n\n// Some common format strings\ndateFormat.masks = {\n\t\"default\":      \"ddd mmm dd yyyy HH:MM:ss\",\n\tshortDate:      \"m/d/yy\",\n\tmediumDate:     \"mmm d, yyyy\",\n\tlongDate:       \"mmmm d, yyyy\",\n\tfullDate:       \"dddd, mmmm d, yyyy\",\n\tshortTime:      \"h:MM TT\",\n\tmediumTime:     \"h:MM:ss TT\",\n\tlongTime:       \"h:MM:ss TT Z\",\n\tisoDate:        \"yyyy-mm-dd\",\n\tisoTime:        \"HH:MM:ss\",\n\tisoDateTime:    \"yyyy-mm-dd'T'HH:MM:ss\",\n\tisoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n\tdayNames: [\n\t\t\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\n\t\t\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n\t],\n\tmonthNames: [\n\t\t\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\n\t\t\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t]\n};\n\n// For convenience...\nDate.prototype.format = function (mask, utc) {\n\treturn dateFormat(this, mask, utc);\n};\n","import axios from \"axios\";\n\nasync function server(activeUser, data, type) {\n\n    const version = 2.3;\n    const phpDomain = 'https://pil1.appleseeds.org.il/dcnir/server/';\n    const imgsDomain = 'https://pil1.appleseeds.org.il/dcnir/';\n\n    // Adding the user's token to the payload\n    data.token = activeUser ? activeUser.token : undefined;\n\n    // Adding the version to the payload\n    data.v = version;\n\n    // creating the request\n    const request = {\n        method: \"post\",\n        url: phpDomain + \"datagate.php?type=\" + type,\n        data: JSON.stringify(data),\n        headers : { 'Content-Type': undefined},\n    }\n\n    const response = await axios(request);\n    return response;\n    // if (json && json.error == \"user not found\") {\n    //     loginStatus\t=false;\n    //     $rootScope.userToken = \"\";\n    //     $rootScope.isAdmin = false;\n    //     $state.transitionTo('login');\n    // }\n    // else if (json && json.error==\"access permission\")\n    // {\n    //     alert(json.error);\n    // }\n}\n\nexport default server;","import React from 'react'\n\nconst ActiveUserContext = React.createContext(null);\n\nexport default ActiveUserContext;\n","import React, { useState, useContext } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap'\nimport './ShowAlert.css'\nimport server from '../../shared/server'\nimport { Redirect } from 'react-router-dom'\nimport ActiveUserContext from '../../shared/activeUserContext'\n\n// this function get two props and function \n//1. type - can get \"error\" or info and according to that select the icon and the color of the text \n//      pink for error and blue for info \n//2. p_text - the text the use want to be present on the window \n//3. The function \"setTextError\" is bollean and use for display or hide the window\n\nconst ShowAlert = (props) => {\n    const { type, p_Text, handleClose } = props;\n    const colorstyle = type === \"error\" ? { color: \"#ffa1a1\" } : { color: \"rgb(37,183,211)\" };\n    const imgsrc = type === \"error\" ? \"drawable-hdpi/noun_error_1156903.png\" : \"drawable-hdpi/icons8-info-39.png\"\n    return (\n        <div className=\"c_showalert\">\n            <div>\n                <div>\n                    <img src={imgsrc} />\n                </div>\n\n                <p style={colorstyle}>{p_Text}</p>\n            </div>\n            <a onClick={handleClose}>&times;</a>\n\n        </div>\n    );\n\n}\nexport default ShowAlert;","import React, { useState, useContext } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap'\nimport './login.css'\nimport server from '../../shared/server'\nimport { Redirect } from 'react-router-dom'\nimport ActiveUserContext from '../../shared/activeUserContext'\nimport ShowAlert from '../../components/ShowAlert/ShowAlert'\n\nconst LoginPage = (props) => {\n    const { handleLogin } = props;\n    const [email, setEmail] = useState(\"\");\n    const [textError, setTextError] = useState(\"\");\n    const [pwd, setPwd] = useState(\"\");\n    const activeUser = useContext(ActiveUserContext);\n    const type = \"error\";\n\n    const handleClose = () => {\n        setTextError(\"\");\n\n    }\n\n    const login = (e) => {\n\n        e.preventDefault();\n\n        if (!email || !pwd) {\n\n            setTextError(\"נא להזין שם משתמש וסיסמה\");\n            // alert(\"נא להזין פרטי משתמש\");\n            return;\n        }\n\n\n        const data = { email, pass: pwd };\n        server(null, data, \"login\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n\n                setTextError(\"אימייל או סיסמה שגויים\");\n\n\n\n                //alert(\"error in login\");\n            } else {\n                handleLogin(res.data);\n            }\n        }, err => {\n            setTextError(\"שגיאה בשרת, נסה שוב מאוחר יותר\");\n            console.error(err);\n        })\n    }\n    const setEmailCleanError = (e) => {\n        setEmail(e.target.value);\n        if (textError != \"\") {\n            setTextError(\"\")\n        }\n\n    }\n    const setPassCleanError = (e) => {\n        setPwd(e.target.value);\n        if (textError != \"\") {\n            setTextError(\"\")\n        }\n\n    }\n    if (activeUser) {\n        return <Redirect to='/courses' />\n    }\n    const showerror = textError === \"\" ? \"errorlogin errorhide\" : \"errorlogin\";\n\n    return (\n\n\n\n        <Container className=\"p-login\">\n            <img src=\"drawable-hdpi/01.png\" />\n\n            <form onSubmit={login} noValidate>\n                <div className=\"loginbutton\">\n\n                    <input value={email} type=\"email\" placeholder=\"אימייל\" onChange={e => setEmailCleanError(e)} />\n                </div>\n                <div className=\"loginbutton\">\n\n                    <input value={pwd} placeholder=\"סיסמא\" type=\"password\" placeholder=\"סיסמה\" onChange={e => setPassCleanError(e)} >\n                    </input>\n                </div>\n                <div className=\"loginbutton\">\n                    <button type=\"submit\">התחברות</button>\n\n\n                </div>\n            </form>\n            <div className={showerror}>\n                <ShowAlert type={type} p_Text={textError} handleClose={handleClose} />\n            </div>\n\n        </Container >\n    );\n}\n\nexport default LoginPage;","import React, { useContext, useState, useEffect } from \"react\";\nimport { Container, Row, Col } from 'react-bootstrap'\nimport './navbar.css'\nimport ActiveUserContext from \"../../shared/activeUserContext\";\nimport server from \"../../shared/server\";\n\n\nconst PortalNavbar = (props) => {\n    const { handleLogout, handleBack, navbarTitle, navbarArrow } = props;\n    //const navbarTitle = \"קורסים\"; // props;\n    //const navbarArrow = true; // props;\n    const activeUser = useContext(ActiveUserContext);\n    const [showUsersTypes, setShowUsersTypes] = useState(false);\n    const [showMenu, setShowMenu] = useState(false);\n    const [serverData, setServerData] = useState({});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const userProfileData = {\n                firstname: \"\",\n                lastname: \"\",\n                image: \"\",\n                email: \"\",\n                userid: \"\"\n            };\n            server(activeUser, userProfileData, \"GetMyProfile\").then(\n                res => {\n                    console.log(res);\n                    setServerData(res.data);\n                    if (res.data.error) {\n                        alert(\"error recieving courses data\");\n                    } else {\n                        // handleLogin(res.data);\n                    }\n                },\n                err => {\n                    console.error(err);\n                }\n            );\n        };\n        if (activeUser) {\n            fetchData();\n        }\n    }, [activeUser]);\n\n\n    const userProfileFullName = serverData.firstname + \" \" + serverData.lastname;\n    const userProfilePic = serverData.image;\n    const userProfilePicLink = \"https://pil1.appleseeds.org.il/dcnir/\" + userProfilePic;\n\n    const openMenu = showMenu ? \"sidebar-open\" : \"\";\n    const showHideDivClasses = showUsersTypes ? \"showHide showUsersTypes\" : \"showHide\";\n    const arrowDivClasses = showUsersTypes ? \"iconDown iconUp\" : \"iconDown\";\n\n    const hamburgerView = <div className=\"menu-icon\" onClick={() => { setShowMenu(!showMenu); }} >\n        <div className=\"hamburger-menu\">\n            <div></div>\n            <div></div>\n            <div></div>\n        </div></div>;\n\n    const backarrowView = <div className=\"menu-icon\" onClick={() => { handleBack() }}>\n        <div class=\"arrow-back\" o>\n            <div class=\"arrow1\"></div>\n            <div class=\"arrow2\"></div>\n            <div class=\"arrow3\"></div>\n        </div>\n    </div>;\n\n    const backArrowShow = navbarArrow ? backarrowView : hamburgerView;\n    const userProfilePicView = userProfilePic ? userProfilePicLink : \"images/profile_icon.png\";\n    const hrefUsersLink = \"#/users/\" + serverData.userid;\n\n    return (\n        <div className=\"c-navbar\">\n            <div className=\"menuTitleFlex\">\n                <div className=\"menuTitle\">{navbarTitle}</div>\n            </div>\n            <div className=\"menu-icon-wrap\">\n                <div>\n                    {backArrowShow}\n\n\n                </div>\n\n                <div className={openMenu}>\n                    <div className=\"sidebar-background\" onClick={() => { setShowMenu(!showMenu); }}></div>\n                    <div className=\"sidebar-wrap\">\n                        <div className=\"sidebar\">\n                            <div className=\"sidebar-options\">\n                                <Container>\n                                    <Row>\n                                        <div className=\"sidebar-closebtn\">\n                                            <img alt=\"\" className=\"closebtn\" src=\"images/close_x_white.svg\" onClick={() => { setShowMenu(!showMenu); }} />\n                                        </div>\n                                    </Row>\n                                    <Row>\n                                        <div className=\"sidebar-header\">\n                                            <img alt=\"\" className=\"appleseeds-logo\" src=\"images/bg_logo.png\"></img>\n                                        </div>\n                                    </Row>\n                                    <div className=\"sidebar-username\">\n                                        <a href={hrefUsersLink} onClick={() => { setShowMenu(!showMenu); }}>\n                                            <Row className=\"flexalign\">\n                                                <Col className=\"flex\" xs={3}>\n                                                    <img alt=\"\" className=\"profile-image\" src={userProfilePicView}></img>\n                                                </Col>\n                                                <Col xs={9}>\n                                                    <div className=\"name-wrap\">\n                                                        <span className=\"user-name\">\n                                                            {userProfileFullName}\n                                                        </span>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                        </a>\n                                    </div>\n                                    <div className=\"divider\" />\n\n                                    <div onClick={() => { setShowUsersTypes(!showUsersTypes); }}>\n                                        <Row className=\"flexalign\">\n                                            <Col className=\"flex\" xs={3}><img alt=\"\" className=\"icon1\" src=\"images/noun_user.png\" /></Col>\n                                            <Col xs={7}><div className=\"menu-information\">משתמשים</div></Col>\n                                            <Col xs={2}><img alt=\"\" id=\"arrow\" className={arrowDivClasses} src=\"images/arrow_down.png\" /></Col>\n                                        </Row>\n                                    </div>\n                                    <div className={showHideDivClasses}>\n                                        <Row className=\"usersTypes\">\n                                            <Col xs={3}></Col>\n                                            <Col xs={9}><a className=\"menu-information\" href=\"#/users?staff\" onClick={() => { setShowMenu(!showMenu); }}>עובדים</a></Col>\n                                        </Row>\n                                        <Row className=\"usersTypes\">\n                                            <Col xs={3}></Col>\n                                            <Col xs={9}><a className=\"menu-information\" href=\"#/users?students\" onClick={() => { setShowMenu(!showMenu); }}>חניכים</a></Col>\n                                        </Row>\n                                        <Row className=\"usersTypes\">\n                                            <Col xs={3}></Col>\n                                            <Col xs={9}><a className=\"menu-information\" href=\"#/users?newUsers\" onClick={() => { setShowMenu(!showMenu); }}>משתמשים חדשים</a></Col>\n                                        </Row>\n                                    </div>\n                                    <div className=\"divider\" />\n                                    <Row>\n                                        <Col className=\"flex\" xs={3}><img alt=\"\" className=\"icon2\" src=\"images/noun_book.png\" /></Col>\n                                        <Col xs={9}><a className=\"menu-information\" href=\"#/courses\" onClick={() => { setShowMenu(!showMenu); }}>קורסים</a></Col>\n                                    </Row>\n                                    <div className=\"divider\" />\n                                    <Row>\n                                        <Col className=\"flex\" xs={3}><img alt=\"\" className=\"icon3\" src=\"images/noun_time.png\" /></Col>\n                                        <Col xs={9}><a className=\"menu-information\" href=\"#/hours-report\" onClick={() => { setShowMenu(!showMenu); }}>דיווח שעות</a></Col>\n                                    </Row>\n                                    <div className=\"divider\" />\n                                    <Row>\n                                        <Col className=\"flex\" xs={3}><img alt=\"\" className=\"icon4\" src=\"images/noun_check_box.png\" /></Col>\n                                        <Col xs={9}><a className=\"menu-information\" href=\"#/hours-approve\" onClick={() => { setShowMenu(!showMenu); }}>אישור שעות</a></Col>\n                                    </Row>\n                                    <div className=\"divider\" />\n                                    <div className=\"sidebar-logout\">\n                                        <Row>\n                                            <Col className=\"flex\" xs={3}><img alt=\"\" className=\"icon5\" src=\"images/noun_off.png\" /></Col>\n                                            <Col xs={9}><a className=\"menu-information\" href=\"#\" onClick={handleLogout}>התנתקות</a></Col>\n                                        </Row>\n                                    </div>\n                                </Container>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PortalNavbar;\n\n","import React, { useState } from \"react\";\nimport \"./search.css\";\n\n// Generic component to search and page between results.\n\n// PROPS:\n//  placeholder. string. the placeholder string for the search input\n//  pages. number. the total number of pages the user can page through.\n//         If this number is 0 do not render the paging on the left.\n//  handleSearch. callback function. Gets called when the user submits (presses enter)\n//                on the search input. Sends the input text.\n//  const handleSearch = searchInput => {\n//  console.log(searchInput);\n//  };\n//  pageChange. callback function. Gets called when the user clicks on the page arrows.\n//              Sends the new page number.\n//  const pageChange = currPage => {\n//  console.log(currPage);\n//  };\n\n//  Used in: USERS PAGE, COURSES PAGE\n\nconst PortalSearchPager = props => {\n  const { placeholder, pages, handleSearch, pageChange, currentPage } = props;\n  const [input, setInput] = useState(\"\");\n  // const [currPage, setCurrPage] = useState(currentPage);\n\n  //   Sets 50% opacity to the next/prev page buttons if the currPage is the first or the last page\n  let prevPageClasses = [\"prev-page\"];\n  if (currentPage === 0) prevPageClasses.push(\"disabled\");\n\n  let nextPageClasses = [\"prev-page\"];\n  if (currentPage === pages) nextPageClasses.push(\"disabled\");\n\n  // Function that sends the input value as a callback to the parent component\n  const ifEnterPressed = ev => {\n    if (ev.keyCode === 13) {\n      handleSearch(input);\n    }\n  };\n\n  // Function that sends the currPage value as a callback to the parent component\n  // after pressing the nex page button\n  const increasePageIndicator = () => {\n    if (currentPage < pages) {\n      const newCurrentPage = currentPage + 1;\n      pageChange(newCurrentPage);\n    }\n  };\n\n  // Function that sends the currPage value as a callback to the parent component\n  // after pressing the nex page button\n  const decreasePageIndicator = () => {\n    if (currentPage > 0) {\n      const newCurrentPage = currentPage - 1;\n      pageChange(newCurrentPage);\n    }\n  };\n\n  let pageIndicator =\n    pages && pages > 1 ? (\n      <div className=\"absolute\">\n        <div className=\"page-indicator\">\n          <img\n            alt=\"Previous Page\"\n            src=\"images/arrow-right.png\"\n            className={prevPageClasses.join(\" \")}\n            onClick={decreasePageIndicator}\n          />\n          <div className=\"currPage\">{currentPage + 1}</div>\n          <img\n            alt=\"Next Page\"\n            src=\"images/arrow-left.png\"\n            className={nextPageClasses.join(\" \")}\n            onClick={increasePageIndicator}\n          />\n        </div>\n      </div>\n    ) : null;\n\n  return (\n    <div className=\"c-search\">\n      <div className=\"search-comp\">\n        <input\n          className=\"search-input\"\n          value={input}\n          type=\"text\"\n          placeholder={placeholder}\n          onChange={ev => setInput(ev.target.value)}\n          onKeyDown={ev => ifEnterPressed(ev)}\n          // autoFocus\n        />\n        {pageIndicator}\n      </div>\n    </div>\n  );\n};\n\nexport default PortalSearchPager;\n","import React, { Component } from 'react';\nimport './PortalTable.css';\n\n\nexport default class PortalTable extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render(){\n        //headers - array of the headers that this table should show\n        //data - array of all the row's data, not only what's in the specific header\n        //handleClick - calling the function that handles a click on a row\n        const { headers, data ,handleClick} = this.props;\n\n        if (!headers || !data) {\n            return null;\n        }\n\n        let headerRow = [];\n        for(let i=0 ; i<headers.length ; i++){\n            headerRow.push(<th key={i}>{headers[i].header}</th>);\n        }\n        let rows = [];\n        for(let i=0 ; i<data.length ; i++){\n            let currentRow = [];\n            for(let j=0 ; j<headers.length ; j++){\n                let currentData;\n                if(data[i][headers[j].key]) {\n                    currentData = <td key={j}>{data[i][headers[j].key]}</td>;\n                } else {\n                    currentData = <td key={j}></td>;\n                }\n                currentRow.push(currentData);\n            }\n            rows.push(<tr key={i} className=\"tableRow\" onClick={() => handleClick(data[i])}>{currentRow}</tr>);\n        }\n        return(\n            <table className=\"mainTable\">\n                <thead>\n                    <tr className=\"headerRow\">\n                        {headerRow}\n                    </tr>\n                </thead>\n                <tbody>\n                   {rows}\n                </tbody>\n            </table>\n        )\n    }\n}","/** @format */\n\nimport React from \"react\";\nimport \"./PortalButtonSet.css\";\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\n\n// Props:\n// - buttons[]. Array of objects. Each object has a \"key\" and a \"label\"\n// - activeKey [String] - indicating which button is active (First Button by default)\n// - handleClick. callback function. invoked when the user clicks on one of the buttons,\n//      it sends the object of the clicked button\n\nconst PortalButtonSet = props => {\n  const { buttons, handleClick, activeKey } = props;\n  // Mapping buttons[] to JSX items\n  let buttonsComp = buttons.map(item => {\n    // activeButton Logic\n    let activeBtnClass = (activeKey === item.key) ? \" active\" : \"\";\n    return (\n      <Col className=\"c-buttonCol\">\n        <Button\n          key={item.key}\n          type=\"button\"\n          className={\"btn\" + activeBtnClass}\n          variant=\"transparent\"\n          bg=\"white\"\n          onClick={() => handleClick(item)}\n        >\n          {item.label}\n        </Button>\n      </Col>\n    );\n  });\n\n\n\n  return (\n    <Container className=\"c-portalButtonSet\" fluid>\n      <Row className=\"justify-content-md-center\">{buttonsComp}</Row>\n    </Container>\n  );\n};\n\nexport default PortalButtonSet;","import React, { useContext, useState, useEffect } from \"react\";\nimport \"./courses.css\";\nimport PortalNavbar from \"../../components/navbar/PortalNavbar\";\nimport ActiveUserContext from \"../../shared/activeUserContext\";\nimport { Redirect } from \"react-router-dom\";\nimport PortalSearchPager from \"../../components/search/PortalSearchPager\";\nimport PortalTable from \"../../components/TableComponent/PortalTable\";\nimport PortalButtonSet from \"../../components/navbar/PortalButtonSet\";\nimport server from \"../../shared/server\";\n\nconst CoursesPage = props => {\n  const { handleLogout } = props;\n  const activeUser = useContext(ActiveUserContext);\n  const [activeKey, setActiveKey] = useState(1);\n  const [selectedCourseId, setselectedCourseId] = useState(\"\");\n  const [courseSearchString, setCourseSearchString] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [serverData, setServerData] = useState([]);\n  const [pages, setPages] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const CoursesData = {\n        search: courseSearchString,\n        sorting: \"courseid\",\n        desc: false,\n        coursestatus: activeKey,\n        page: currentPage\n      };\n      server(activeUser, CoursesData, \"SearchCourses\").then(\n        res => {\n          console.log(res);\n          setServerData(res.data.courses);\n          setPages(res.data.pages);\n\n          if (res.data.error) {\n            alert(\"error recieving courses data\");\n          } else {\n            // handleLogin(res.data);\n          }\n        },\n        err => {\n          console.error(err);\n        }\n      );\n    };\n    if (activeUser) {\n      fetchData();\n    }\n  }, [activeUser, currentPage, activeKey, courseSearchString]);\n\n  if (!activeUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const selectedCourseUrl = \"/courses/\" + selectedCourseId;\n\n  if (selectedCourseId) {\n    return <Redirect to={selectedCourseUrl} />;\n  }\n\n  const handleSearch = searchInput => {\n    setCurrentPage(0);\n    setCourseSearchString(searchInput);\n  };\n\n  const pageChange = newCurrentPage => {\n    setCurrentPage(newCurrentPage);\n  };\n\n  const headers = [\n    { key: \"subname\", header: \"שם קורס מקוצר\" },\n    { key: \"project\", header: \"פרויקט\" },\n    { key: \"teachers\", header: \"מדריך\" }\n  ];\n\n  const buttons = [\n    { key: 1, label: \"קורסים פעילים\" },\n    { key: 0, label: \"לא פעילים\" }\n  ];\n\n  const handleActiveBtnClick = btnClicked => {\n    setCurrentPage(0);\n    setActiveKey(btnClicked.key);\n  };\n\n  const handleCourseSelect = courseSelected => {\n    setselectedCourseId(courseSelected.courseid);\n  };\n\n  return (\n    <div className=\"p-courses\">\n      <PortalNavbar navbarTitle=\"קורסים\" handleLogout={handleLogout} />\n      <PortalSearchPager\n        placeholder={\"חיפוש קורס\"}\n        pages={pages}\n        currentPage={currentPage}\n        handleSearch={handleSearch}\n        pageChange={pageChange}\n      />\n      <div className=\"table\">\n        <PortalTable\n          headers={headers}\n          data={serverData}\n          handleClick={handleCourseSelect}\n        />\n      </div>\n      <PortalButtonSet\n        buttons={buttons}\n        handleClick={handleActiveBtnClick}\n        activeKey={activeKey}\n      />\n    </div>\n  );\n};\n\nexport default CoursesPage;\n","import React, { useState, useContext } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap'\nimport './PortalTabView.css'\nimport server from '../../shared/server'\nimport { Redirect } from 'react-router-dom'\nimport ActiveUserContext from '../../shared/activeUserContext'\n\n// this function get  prop of Object with two keys\n//1. header - the name of the TAB\n//2. view - page in JSX of the selected TAB\n\n\nconst PortalTabView = (props) => {\n    const { tabsObj } = props;\n    const [indexOfTab, setActiveTab] = useState(0);\n   /*  const tabsObj = [{\n        header: \"פרופיל\",\n        view: <p>I'm profile page</p>\n    },\n    {\n        header: \"קורסים\",\n        view: <p>I'm courses page</p>\n    },\n    {\n        header: \"עובדים\",\n        view: <p>I'm employees page</p>\n    },\n    {\n        header: \"דיווח\",\n        view: <p>I'm report page</p>\n    }];\n\n*/\n\n    let tabView = null;\n    const tabContent = tabsObj[indexOfTab].view;\n    if (tabsObj.length > 0) {\n        tabView = tabsObj.map(function (tabObj, index) {\n            let classOfNav = \"nav-item nav-link\";\n            classOfNav += indexOfTab === index ? \" active\" : \"\"\n            const tabNav = <a className={classOfNav} data-toggle=\"tab\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\" onClick={() => setActiveTab(index)}>{tabObj.header}</a>\n            return tabNav\n        })\n    }\n\n    return (\n        <div className=\"c_portalTabView\">\n\n\n            <section id=\"tabs\" class=\"project-tab\">\n\n                <nav>\n                    <div class=\"nav nav-tabs nav-fill\" id=\"nav-tab\" role=\"tablist\">\n                        {tabView}\n\n                    </div>\n                </nav>\n                <div class=\"tab-content\" id=\"nav-tabContent\">\n                    {tabContent}\n                </div>\n            </section>\n\n\n\n\n\n\n\n        </div>\n    );\n\n}\nexport default PortalTabView;","/** @format */\n\nimport React, { useState } from \"react\";\nimport \"../components/PortalInput.css\";\n\n// <PortalInput/> Component Props:\n//  - inputTitle (String) - will be rendering the Title Lable  - *not Required\n//  - inputPlaceholder (String) - will be rendering the input Placeholder\n//  - handleChange () - callback from Parent page/component\n\n const PortalInput = (props) => {\n  const {inputTitle, inputPlaceholder, inputValue, handleChange} = props;\n\n  return (\n    <div className=\"c-portal-input\">\n      <label className=\"c-portal-input-label\">{inputTitle}</label>\n      <input\n        className=\"c-portal-input-element\"\n        value={inputValue}\n        placeholder={inputPlaceholder}\n        onChange={event => {\n          handleChange(event.target.value);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PortalInput;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport \"../PortalInputSelect/PortalInputSelect.css\";\n\n// <PortalInputSelect /> props:\n//  - inputTitle (String) - will be rendering the Title Lable  - *not Required  | e.g.- \"gender\"\n//  - options[] - array of  Obj option{key : value, label: value}  >>  e.g. - [{key: \"0\", label: \"male\"}, {key: \"1\", label: \"female\"}, {key: \"2\",label: \"undefined\"}]\n//  - optionsKey (String) - Renders the value for this key  >>  e.g - \"0\"\n//  - handleSelection( ) - callback function. sends the object of the selected option. \n\nconst PortalInputSelect = props => {\n  const { inputTitle, options, optionsKey, handleSelection} = props;\n// mapping the options arr[] to JSX options elements for rendering \n  const selectInputOptions = options.map(item => {\n    return(<option key={item.key} value={item.key}>{item.label}</option>)\n  });\n  let labelOn =  <span></span>\n  if(inputTitle){\n    labelOn = <label className=\"c-portal-input-select-label\">{inputTitle}</label>\n  }\n  return (\n    <div className=\"c-portal-input-select\">\n      {labelOn}\n      <select\n        className=\"c-portal-input-select-element\"\n        value={optionsKey}\n        onChange={event => {\n          // console.log(event.target.value);\n          handleSelection(event.target.value);\n        }}\n      >\n        {selectInputOptions}\n      </select>\n    </div>\n  );\n};\n\nexport default PortalInputSelect;\n","import React from \"react\";\nimport \"./PortalMultipleSelect.css\";\n\n// Generic component to use for multiple select options.\n\n// PROPS:\n// title.\n// displaySelectList.\n// hideSelectList.\n// options. array of objects.\n// selectedOptions. callback function. Gets called when the user adds/\n//                  deletes options to/from the options array.\n// addOption. callbak function. Gets called when the user selects an option\n//            to add to the selectedOption from the options array.\n// deleteOption. callbak function. Gets called when the user selects an option\n//               to remove from the selectedOption back to the options array.\n// deleteAllOptions. callbak function. Gets called when the user wants to remove\n//                   all options from the selectedOption back to the options array.\n\n//  Used in: ...\n\nconst PortalMultipleSelect = props => {\n  const {\n    label,\n    displaySelectList,\n    hideSelectList,\n    options,\n    selectedOptions,\n    addOption,\n    deleteOption,\n    deleteAllOptions\n  } = props;\n\n  const optionsSelect = options.map((option, index) => (\n    <div className=\"select-options\" eventkey={index}>\n      <div\n        className=\"option-selected\"\n        onClick={() => {\n          addOption(option);\n        }}\n      >\n        {option.label}\n      </div>\n    </div>\n  ));\n\n  const selectedOptionsButtons = selectedOptions.map((button, index) => (\n    <div className=\"option-selected-button\" eventkey={index}>\n      <div className=\"option-selected-button-label\">{button.label}</div>\n      <button\n        className=\"option-del-btn\"\n        onClick={() => {\n          deleteOption(index);\n        }}\n      >\n        x\n      </button>\n    </div>\n  ));\n\n  let showHideSelectList = \"\";\n  if (hideSelectList) {\n    showHideSelectList = \"options-select-list\";\n  } else showHideSelectList = \"options-select-list options-select-list-show\";\n\n  return (\n    <div className=\"c-select\">\n      <div className=\"c-label\">{label}</div>\n      <div className=\"options-container\">\n        <button\n          className=\"show-select-list-btn\"\n          onClick={() => {\n            displaySelectList();\n          }}\n        >\n          +\n        </button>\n        <div>\n          <div className=\"options-select-container\">\n            {selectedOptionsButtons}\n          </div>\n        </div>\n        <button\n          className=\"all-options-del-btn\"\n          onClick={() => {\n            deleteAllOptions();\n          }}\n        >\n          x\n        </button>\n      </div>\n      <div className={showHideSelectList}>{optionsSelect}</div>\n    </div>\n  );\n};\n\nexport default PortalMultipleSelect;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport PortalInput from \"../../../../components/PortalInput\";\nimport PortalInputSelect from \"../../../../components/PortalInputSelect/PortalInputSelect\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./CourseProfile.css\";\nimport server from \"../../../../shared/server\";\nimport ActiveUserContext from \"../../../../shared/activeUserContext\";\nimport PortalMultipleSelect from \"../../../../components/PortalMultipleSelect/PortalMultipleSelect\";\nconst CourseProfile = (props) => {\n    \n    const {courseId} = props;\n\n    const [courseName, setCourseName] = useState(\"\");\n    const [hebrewShortName, setHebrewShortName] = useState(\"\");\n    const [arabShortName, setarabShortName] = useState(\"\");\n    const [project, setProject] = useState(\"\");\n    const [projectList, setProjectList] = useState([]);\n    const [tagsSelected, setTagsSelected] = useState([]);\n    const [tagsList, setTagsList] = useState([\n        { value: \"1\", label: \"תגית 1\" },\n        { value: \"2\", label: \"תגית 2\" },\n        { value: \"3\", label: \"תגית 3\" }\n      ]);\n    const [hideSelectList, setHideSelectList] = useState(true);\n    const [city, setCity] = useState(\"\");\n    const [cityList, setCityList] = useState([]);\n    const [budgetYear, setBudgetYear] = useState(\"\");\n    const [budgetYearList, setBudgetYearList] = useState([]);\n    const [instructer, setInstructer] = useState(\"\");\n\n    const activeUser = useContext(ActiveUserContext);\n\n    useEffect(() => {\n        // read data from server using courseId and updates all the fields\n        server(activeUser, {courseid: courseId}, \"GetCourseById\").then(res => {\n            setCourseName(res.data.name);\n            setHebrewShortName(res.data.subname);\n            setarabShortName(res.data.subnameinarabic);\n            setProject(res.data.projectid);\n            setCity(res.data.cityid);\n            setBudgetYear(res.data.yearbudgetid);\n            setInstructer(res.data.primaryTeacherName);\n        })\n        server(activeUser, {}, \"GetCities\").then(res => {\n            let x=[];\n            res.data.forEach(city => {\n                const y = {key: city.cityid, value: city.name, label: city.name}\n                x.push(y);\n            })\n            setCityList(x);            \n        })\n        server(activeUser, {}, \"GetProjects\").then(res => {\n            let x=[];\n            res.data.forEach(project => {\n                const y = {key: project.projectid, value: project.projectname, label: project.projectname, tags: project.projecttags}\n                x.push(y);\n            })\n            setProjectList(x);            \n        })\n        server(activeUser, {}, \"GetActiveYearsBudget\").then(res => {\n            let x=[];\n            res.data.forEach(year => {\n                const y = {key: year.yearbudgetid, value: year.year, label: year.year}\n                x.push(y);\n            })\n            setBudgetYearList(x);            \n        })\n\n\n \n    }, [])\n\n\n    // update tags\n    useEffect(() => {\n        console.log(project);\n        if(projectList && project){\n            setTagsSelected([]);\n            const projectObj = projectList.find(currProject => currProject.key === project);\n            let x=[];\n                projectObj.tags.forEach(tag => {\n                    const y = {value: tag.projecttagid, label: tag.projecttagname}\n                    x.push(y);\n                })\n                setTagsList(x);\n        }\n    }, [project, projectList])\n\n    function displaySelectList(){\n        setHideSelectList(!hideSelectList);\n      };\n    // Callback function that adds a selected option from the tags array\n    // and deletes it from the tags array\n    function addOption(tag) {\n        setTagsSelected(tagsSelected.concat(tag));\n        for (let i = 0; i < tagsList.length; i++) {\n            if (tagsList[i].value === tag.value) {\n                tagsList.splice(i, 1);\n                setTagsList(tagsList);\n                break;\n            }\n        }\n        setHideSelectList(false);\n    };\n    // Callback function that deletes a selected option from the tagsSelected array\n    // and add it back to the tagsList array\n    function deleteOption(index) {\n        const tempOption = tagsSelected[index];\n        const cloneList = [...tagsSelected];\n        cloneList.splice(index, 1);\n        setTagsSelected(cloneList);\n        setTagsList(tagsList.concat(tempOption));\n    };\n    // Callback function that deletes all selected tagsList from the tagsSelected array\n    // and adds them back to the tagsList array\n    function deleteAllOptions(){\n        const cloneList = [...tagsSelected];\n        setTagsSelected([]);\n        setTagsList(tagsList.concat(cloneList));\n        setHideSelectList(true);\n    };\n    return (\n        <Container className=\"profileContainer\">\n            <Row className=\"profileRow\">\n                <Col>\n                    <PortalInput inputTitle=\"שם קורס מלא\" inputPlaceholder={courseName} inputValue={courseName} handleChange={(v) => setCourseName(v)}/>\n                </Col>\n            </Row>\n            <Row className=\"profileRow\">\n                <Col>\n                    <PortalInput inputTitle=\"שם קורס מקוצר בעברית\" inputPlaceholder={hebrewShortName} inputValue={hebrewShortName} handleChange={(v) => setHebrewShortName(v)}/>\n                </Col>\n                <Col>\n                    <PortalInput inputTitle=\"שם קורס מקוצר בערבית\" inputPlaceholder={arabShortName} inputValue={arabShortName} handleChange={(v) => setarabShortName(v)}/>\n                </Col>\n            </Row>\n            <Row className=\"profileRow\">\n                <Col>\n                    <PortalInputSelect inputTitle=\"פרויקט\" options={projectList} optionsKey={project} handleSelection={(v) => setProject(v)}/>\n                </Col>\n            </Row>\n            <Row className=\"profileRow\">\n                <Col>\n                    <PortalMultipleSelect label=\"תגיות\" displaySelectList={() => displaySelectList()} hideSelectList={hideSelectList} options={tagsList} selectedOptions={tagsSelected} addOption={(tag) => addOption(tag)} deleteOption={(i) => deleteOption(i)} deleteAllOptions={() => deleteAllOptions()}/>\n                </Col>\n            </Row>\n            <Row className=\"profileRow\">\n                <Col>\n                    <PortalInputSelect inputTitle=\"עיר\" options={cityList} optionsKey={city} handleSelection={(v) => setCity(v)}/>\n                </Col>\n                <Col>\n                    <PortalInputSelect inputTitle=\"שנת תקציב\" options={budgetYearList} optionsKey={budgetYear} handleSelection={(v) => setProject(v)}/>\n                </Col>\n            </Row>\n            <Row className=\"profileRow\">\n                <Col>\n                    <PortalInput inputTitle=\"מדריך\" inputPlaceholder={instructer} inputValue={instructer} handleChange={(v) => setInstructer(v)}/>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default CourseProfile;","import React, { useState, useContext, useEffect } from 'react';\nimport './PortalCourseView.css'\nimport server from '../../shared/server';\nimport ActiveUserContext from '../../shared/activeUserContext'\n\n\nconst PortalCourseView = (props) => {\n\n    const { courseId } = props;\n    const [courseName, setCourseName] = useState(\"\");\n    const [hebrewShortName, setHebrewShortName] = useState(\"\");\n\n    const [employeeRegD, setemployeeRegD] = useState(\"\");\n\n    const activeUser = useContext(ActiveUserContext);\n\n\n\n    useEffect(() => {\n        // read data from server using courseId and updates all the fields\n        server(activeUser, { courseid: courseId }, \"GetCourseById\").then(res => {\n            setCourseName(res.data.name);\n            setHebrewShortName(res.data.subname);\n            // setarabShortName(res.data.subnameinarabic);\n            // setProject(res.data.projectid);\n            // setCity(res.data.cityid);\n            // setBudgetYear([{key : \"0\", value: \"כחול\", label:\"כחול\"} , {key: \"1\", value: \"אדום\", label:\"אדום\"}]);\n            // setInstructer(res.data.primaryTeacherName);\n        })\n\n\n\n\n\n\n    }, [courseId])\n\n\n    return (\n        <div className=\"c_portalHeaderView c_portalCoursesView\">\n\n            <div className=\"container\">\n                <p>{hebrewShortName}</p>\n                <div className=\"flextoleft\">\n                    <div className=\"firstimg\">\n\n                        <img src=\"drawable-mdpi/noun_back_arrow_2690272.png\" />\n                    </div>\n                    <div className=\"secondimg\">\n                        <img src=\"drawable-mdpi/noun_copy_573715.png\" />\n                    </div>\n                    <div className=\"thirdimg\">\n                        <img src=\"drawable-mdpi/noun_save_2429243.png\" />\n                    </div>\n                </div>\n            </div>\n            {/* <p>{employeeFamily}</p> */}\n\n            <p className=\"subHeader\"> {courseName} </p>\n\n\n        </div>\n\n\n\n    );\n}\n\nexport default PortalCourseView;\n","import React, { useState, useContext } from 'react';\nimport './courses.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport ActiveUserContext from '../../shared/activeUserContext'\nimport { Redirect, useParams } from 'react-router-dom'\nimport PortalTabView from '../../components/PortalTabView/PortalTabView';\nimport CourseProfile from './Tabs/Profile/CourseProfile';\nimport PortalCourseView from '../../components/PortalCoursesView/PortalCoursesView';\n\nconst CourseDetailsPage = (props) => {\n    const { handleLogout } = props;\n    const activeUser = useContext(ActiveUserContext);\n    const [pageBack, setPageBack] = useState(false);\n    const { id } = useParams();\n    const tabsObj = [{\n        header: \"קורס\",\n        view: <CourseProfile courseId={id} />\n    },\n    {\n        header: \"סילבוס\",\n        view: <p>I'm sylabus page</p>\n    },\n    {\n        header: \"סטודנטים\",\n        view: <p>I'm students page</p>\n    },\n    {\n        header: \"מדריכים\",\n        view: <p>I'm instructers page</p>\n    }];\n\n\n\n    if (!activeUser) {\n        return <Redirect to='/' />\n    }\n    if (pageBack) {\n        return <Redirect to='/courses' />\n    }\n    return (\n        <div>\n            {/* <PortalNavbar handleLogout={handleLogout} /> */}\n            {/*<h1>פרטי קורס</h1>*/}<PortalNavbar handleLogout={handleLogout} navbarTitle={\"קורסים\"} navbarArrow={true} handleBack={() => setPageBack(true)} />\n            <PortalCourseView courseId={id} />\n            <PortalTabView tabsObj={tabsObj} />\n        </div>\n    );\n}\n\nexport default CourseDetailsPage;","import React, {useContext, useState, useEffect} from 'react';\nimport './users.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport ActiveUserContext from '../../shared/activeUserContext';\nimport {Redirect} from 'react-router';\nimport PortalTable from \"../../components/TableComponent/PortalTable\";\nimport PortalSearchPager from '../../components/search/PortalSearchPager'\nimport PortalButtonSet from '../../components/navbar/PortalButtonSet'\nimport server from '../../shared/server'\nimport {getApiName, getHeaders} from '../../utils/utils'\n\nconst UsersPage = (props) => {\n    const {handleLogout} = props;\n    const apiName = getApiName(props.location.search.substring(1));\n    const activeUser = useContext(ActiveUserContext);\n\n\n    //state\n    const [data, setData] = useState([]);\n    const [pageNum, setPageNum] = useState(0);\n    const [headers, setHeaders] = useState(getHeaders());\n    const [userStatus, setUserStatus] = useState(1);\n    const [searchString, setSearchString] = useState(\"\");\n\n\n    //inner functions\n    //fetch data from db\n    useEffect(\n        () => {\n            setData([]);\n            const fetchData = async () => {\n                await server(activeUser, createPayload(), apiName).then(res => {\n                    console.log(res);\n                    if (res.data.error) {\n                        alert(\"error in login\");\n                    } else {\n                        setData(res.data);\n                    }\n                }, err => {\n                    console.error(err);\n                });\n            };\n            fetchData().then(() => console.log('found data')).catch(err => console.log(err));\n        }, [userStatus, pageNum, searchString, apiName]);\n\n    if (!activeUser) {\n        return <Redirect to='/'/>\n    }\n\n    const handleSearch = (searchString) => {\n        setSearchString(searchString);\n        setPageNum(0);\n    };\n\n    const handleUserType = (item) => {\n        setUserStatus(item.key);\n        setPageNum(0);\n        setSearchString(\"\");\n    };\n\n    const callPageData = (index) => {\n        setPageNum(index);\n    };\n\n    const createPayload = () => {\n        return {\"search\": searchString, \"sorting\": \"userid\", \"desc\": false, \"userstatus\": userStatus, \"page\": pageNum};\n    };\n\n    const clickOnRow = (e) => {\n        props.history.push({\n            pathname: `/users/${e.userid}`,\n            state: {user: e}\n        });\n    };\n\n\n    return (\n        <div className=\"p-users\">\n            <PortalNavbar handleLogout={handleLogout}/>\n            <PortalSearchPager placeholder='חיפוש משתמש' handleSearch={(e) => handleSearch(e)} pages={data.pages}\n                               pageChange={(index) => callPageData(index)} currentPage={pageNum}/>\n            <div className=\"p-users\">\n                <PortalTable headers={headers} data={data.users} handleClick={(e) => clickOnRow(e)}/>\n            </div>\n            <PortalButtonSet buttons={[{key: 1, label: 'פעילים'}, {key: 0, label: 'לא פעילים'}]}\n                             handleClick={(item) => handleUserType(item)} activeKey={userStatus}/>\n        </div>\n    );\n};\n\nexport default UsersPage;","function getApiName(userType) {\n    const mappedApi = {\n        'staff': 'SearchStaffUnderMe',\n        'newUsers': 'SearchNewUsers',\n        'students': 'SearchStudentsUnderMe'\n    };\n    return mappedApi[userType] == null ? mappedApi['staff'] : mappedApi[userType];\n}\n\n\nfunction getHeaders() {\n    return [{key: \"userid\", header: \"מס' מזהה\"}, {\n        key: \"firstname\",\n        header: \"שם פרטי\"\n    }, {\n        key: \"lastname\",\n        header: \"שם משפחה\"\n    }, {key: 'email', header: 'דוא\"ל'}]\n}\n\nfunction getUserDetailsProfileAPIs() {\n    return ['GetUserProfileById','GetManagedUsersByUserId','GetUserProjects']\n}\n\n\nexport {getApiName,getHeaders};","import React, {Fragment, useContext, useEffect, useState} from 'react';\nimport PortalInput from \"../PortalInput\";\nimport PortalInputSelect from \"../../components/PortalInputSelect/PortalInputSelect\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport server from \"../../shared/server\";\nimport ActiveUserContext from \"../../shared/activeUserContext\";\nimport PortalMultipleSelect from \"../../components/PortalMultipleSelect/PortalMultipleSelect\";\n\nfunction UserProfile(props) {\n    const [profile,setProfile] = useState({});\n    const [cities, setCities] = useState([]);\n    const [genders, setGenders] = useState([]);\n    const [religions, setReligions] = useState([]);\n    const [tagsList, setTagsList] = useState([\n        { value: \"1\", label: \"תגית 1\" },\n        { value: \"2\", label: \"תגית 2\" },\n        { value: \"3\", label: \"תגית 3\" }\n    ]);\n\n    const [tagsSelected, setTagsSelected] = useState([]);\n    const [hideSelectList, setHideSelectList] = useState(true);\n    const activeUser = useContext(ActiveUserContext);\n    const handleChange = (e) => {\n        console.log(e.target);\n    };\n\n    useEffect(()=> {\n        const getUserProfileById = async () => {\n            await server(activeUser, {userId: props.user}, 'GetUserProfileById').then(res => {\n                console.log(res);\n                if (res.data.error) {\n                    alert(\"error in login\");\n                } else {\n                    setProfile(res.data.profile);\n                }\n            }, err => {\n                console.error(err);\n            });\n        };\n        const getCities = async () => {\n            await server(activeUser, {}, 'GetCities').then(res => {\n                console.log(res);\n                if (res.data.error) {\n                    alert(\"error in login\");\n                } else {\n                    setCities(res.data.map(city => {\n                        return {\n                            key:city.cityid,\n                            label: city.name\n                        }\n                    }));\n                }\n            }, err => {\n                console.error(err);\n            });\n        };\n        const getGenders = async () => {\n            await server(activeUser, {}, 'GetGenders').then(res => {\n                console.log(res);\n                if (res.data.error) {\n                    alert(\"error in login\");\n                } else {\n                    setGenders(res.data.map(item => {\n                        return {\n                            key: item.genderid,\n                            label: item.name\n                        }\n                    }));\n                }\n            }, err => {\n                console.error(err);\n            });\n        };\n        const getReligions = async () => {\n            await server(activeUser, {}, 'GetReligions').then(res => {\n                console.log(res);\n                if (res.data.error) {\n                    alert(\"error in login\");\n                } else {\n                    setReligions(res.data.map(item => {\n                        return {\n                            key: item.religionid,\n                            label: item.name\n                        }\n                    }));\n                }\n            }, err => {\n                console.error(err);\n            });\n        };\n        Promise.all([getUserProfileById(),getCities(),getGenders(),getReligions()]).then((values)=> {\n            console.log(values);\n        })\n    },[]);\n\n    if (cities.length < 1 && profile){\n        return <Fragment/>\n    }\n\n    function displaySelectList(){\n        setHideSelectList(!hideSelectList);\n    };\n    // Callback function that adds a selected option from the tags array\n    // and deletes it from the tags array\n    function addOption(tag) {\n        setTagsSelected(tagsSelected.concat(tag));\n        for (let i = 0; i < tagsList.length; i++) {\n            if (tagsList[i].value === tag.value) {\n                tagsList.splice(i, 1);\n                setTagsList(tagsList);\n                break;\n            }\n        }\n        setHideSelectList(false);\n    };\n    // Callback function that deletes a selected option from the tagsSelected array\n    // and add it back to the tagsList array\n    function deleteOption(index) {\n        const tempOption = tagsSelected[index];\n        const cloneList = [...tagsSelected];\n        cloneList.splice(index, 1);\n        setTagsSelected(cloneList);\n        setTagsList(tagsList.concat(tempOption));\n    };\n    // Callback function that deletes all selected tagsList from the tagsSelected array\n    // and adds them back to the tagsList array\n    function deleteAllOptions(){\n        const cloneList = [...tagsSelected];\n        setTagsSelected([]);\n        setTagsList(tagsList.concat(cloneList));\n        setHideSelectList(true);\n    };\n\n\n    const {userid, firstname, lastname, firstnameinarabic, lastnameinarabic,phone,phone2,phone2owner,superstaffname,tznumber,birthday,email,cityid,religionid,genderid,address} = profile;\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <PortalInput inputTitle={'שם פרטי בעברית'} inputPlaceholder={firstname}\n                                 handleChange={(e) => handleChange(e)}/>\n                </Col>\n                <Col>\n                    <PortalInput inputTitle={'שם משפחה בעברית'} inputPlaceholder={lastname}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalInput inputTitle={'שם פרטי בערבית'} inputPlaceholder={firstnameinarabic}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n                <Col>\n                    <PortalInput inputTitle={'שם משפחה בערבית'} inputPlaceholder={lastnameinarabic}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalInput inputTitle={'מס\\' טלפון'} inputPlaceholder={phone}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalInput inputTitle={'מס\\' טלפון נוסף'} inputPlaceholder={phone2}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n                <Col>\n                    <PortalInput inputTitle={'שייך ל'} inputPlaceholder={phone2owner}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalInput inputTitle={'תאריך לידה'} inputPlaceholder={birthday}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n                <Col>\n                    <PortalInput inputTitle={'מספר תעודת זהות'} inputPlaceholder={tznumber}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalInputSelect inputTitle={'עיר'}\n                                 handleSelection={() => (e) => handleChange(e)} options={cities} optionsKey={cityid}/>\n                </Col>\n                <Col>\n                    <PortalInput inputTitle={'כתובת'} inputPlaceholder={address}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalInputSelect inputTitle={'מגזר'}\n                                       handleSelection={() => (e) => handleChange(e)} options={religions} optionsKey={religionid}/>\n                </Col>\n                <Col>\n                    <PortalInputSelect inputTitle={'מגדר'}\n                                       handleSelection={() => (e) => handleChange(e)} options={genders} optionsKey={genderid}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalInput inputTitle={'אימייל'} inputPlaceholder={email}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalInput inputTitle={'מנהל ישיר'} inputPlaceholder={phone}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalInput inputTitle={'מאשרי שעות נוספים'} inputPlaceholder={superstaffname}\n                                 handleChange={() => (e) => handleChange(e)}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalMultipleSelect label='מאשרי שעות נוספים' displaySelectList={() => displaySelectList()} hideSelectList={hideSelectList} options={tagsList} selectedOptions={tagsSelected} addOption={(tag) => addOption(tag)} deleteOption={(i) => deleteOption(i)} deleteAllOptions={() => deleteAllOptions()}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalMultipleSelect label=\"תעודות\" displaySelectList={() => displaySelectList()} hideSelectList={hideSelectList} options={tagsList} selectedOptions={tagsSelected} addOption={(tag) => addOption(tag)} deleteOption={(i) => deleteOption(i)} deleteAllOptions={() => deleteAllOptions()}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalMultipleSelect label='תעודות בגרות' displaySelectList={() => displaySelectList()} hideSelectList={hideSelectList} options={tagsList} selectedOptions={tagsSelected} addOption={(tag) => addOption(tag)} deleteOption={(i) => deleteOption(i)} deleteAllOptions={() => deleteAllOptions()}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalMultipleSelect label=\"שונות\" displaySelectList={() => displaySelectList()} hideSelectList={hideSelectList} options={tagsList} selectedOptions={tagsSelected} addOption={(tag) => addOption(tag)} deleteOption={(i) => deleteOption(i)} deleteAllOptions={() => deleteAllOptions()}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <PortalMultipleSelect label=\"פרויקטים\" displaySelectList={() => displaySelectList()} hideSelectList={hideSelectList} options={tagsList} selectedOptions={tagsSelected} addOption={(tag) => addOption(tag)} deleteOption={(i) => deleteOption(i)} deleteAllOptions={() => deleteAllOptions()}/>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default UserProfile;","import React, { useState, useContext, useEffect } from 'react';\nimport './PortalHeaderView.css'\nimport server from '../../shared/server';\nimport ActiveUserContext from '../../shared/activeUserContext'\n\n\nconst PortalHeaderView = (props) => {\n    const { userId } = props;\n    const [empImg, setemImg] = useState(\"drawable-mdpi/profile_icon.png\");\n    const [employeeName, setemployeeName] = useState(\"שם העובד\");\n    const [employeeRegD, setemployeeRegD] = useState(\"\");\n    const [employeeFamily, setemployeeFamily] = useState(\"שם משפחה\");\n    const activeUser = useContext(ActiveUserContext);\n\n    let myObj = { userId: userId };\n\n    useEffect(() => {\n        server(activeUser, myObj, \"GetUserProfileById\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n\n                console.log(\"error in reading from the server\");\n            } else {\n                setemployeeName(res.data.profile.firstname);\n                setemployeeFamily(res.data.profile.lastname);\n                setemployeeRegD(res.data.profile.registerdate);\n                if (res.data.profile.image != \"\") {\n                    setemImg(\"https://pil1.appleseeds.org.il/dcnir/\" + res.data.profile.image);\n                }\n            }\n        });\n    }, [userId])\n\n\n    return (\n        <div className=\"c_portalHeaderView\">\n\n            <div className=\"container\">\n                <p>{employeeName}</p>\n                <div className=\"flextoleft\">\n                    <div className=\"firstimg\">\n\n                        <img src=\"drawable-mdpi/noun_back_arrow_2690272.png\" />\n                    </div>\n                    <div className=\"secondimg\">\n                        <img src=\"drawable-mdpi/noun_copy_573715.png\" />\n                    </div>\n                    <div className=\"thirdimg\">\n                        <img src=\"drawable-mdpi/noun_save_2429243.png\" />\n                    </div>\n                </div>\n            </div>\n            <p>{employeeFamily}</p>\n            <div className=\"changepass\">\n                <div>\n                    <input type=\"checkbox\" id=\"scales\" name=\"scales\" />\n                    <label for=\"scales\">שינוי סיסמה</label>\n                </div>\n                <img src={empImg} />\n\n            </div>\n            <p>נרשם ב : {employeeRegD} </p>\n\n\n        </div>\n\n\n\n    );\n}\n\nexport default PortalHeaderView;\n","import React, { useState, useContext } from 'react';\nimport './users.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport ActiveUserContext from '../../shared/activeUserContext'\nimport PortalTabView from '../../components/PortalTabView/PortalTabView';\nimport UserProfile from \"../../components/userComponents/UserProfile\";\nimport { Redirect, useParams } from 'react-router-dom'\nimport PortalInput from '../../components/PortalInput'\nimport PortalHeaderView from '../../components/PortalHeaderView/PortalHeaderView';\n\nconst UserDetailsPage = (props) => {\n    const { navbarTitle, navbarArrow, handleLogout, handleBack } = props;\n    const activeUser = useContext(ActiveUserContext);\n    const { id } = useParams();\n    const [pageBack, setPageBack] = useState(false);\n\n    if (!activeUser) {\n        return <Redirect to='/' />\n    }\n    if (pageBack) {\n        return <Redirect to='/users' />\n    }\n\n    const tabsObj = [{\n        header: \"פרופיל\",\n        view: <UserProfile user={id} />\n    },\n    {\n        header: \"קורסים\",\n        view: <p>I'm courses page</p>\n    },\n    {\n        header: \"עובדים\",\n        view: <p>I'm employees page</p>\n    },\n    {\n        header: \"דיווח\",\n        view: <p>I'm report page</p>\n    }];\n\n    return (\n        <div>\n            <PortalNavbar handleLogout={handleLogout} navbarTitle={\"עובדים\"} navbarArrow={true} handleBack={() => setPageBack(true)} />\n            <PortalHeaderView userId={id} />\n            <div>\n                {/* <PortalInput inputTitle={'test'} inputValue={'input'} /> */}\n                <PortalTabView tabsObj={tabsObj} />\n            </div>\n        </div>\n    );\n}\n\nexport default UserDetailsPage;","import React from 'react';\nimport './HoursReport.css'\nimport './date.format'\n\nconst HoursReport = (props) => {\n    // Declare a new state variable, which we'll call \"count\" const [count,\n    // setCount] = useState(0);\n    const {report} = props;\n    // <p>You clicked {count}times</p> <button onClick={() => setCount(count + 1)}>\n    //    Click me </button>\n\n    function createDateObject(value) {\n        try {\n            return new Date(value.split('/').reverse().join('/'));\n        }\n        catch(e) {\n            return null;\n        }\n    }\n\n    const date = createDateObject(report.date);\n    let row_class;\n    switch(report.approval){\n        case \"-1\": row_class=\"not-approved\";\n        break;\n        case \"0\": row_class=\"waiting\";\n        break;\n        case \"1\": row_class=\"approved\";\n        break;\n    }\n\n    let row_style = {\n        margin : \"5px\",\n        width : \"100%\"\n    };\n\n    return (\n        <tr className={row_class} style={row_style} >\n            <td>{date.format(\"dd.mm.yy\")}</td>\n            <td>{report.projectName}</td>\n            <td>{report.subject}</td>\n            <td style={{direction:'ltr'}}>{report.totalTime}</td> \n        </tr>\n    );\n}\n\nexport default HoursReport;","import React, {useState} from 'react';\nimport './HoursReportTable.css'\nimport HoursReport from './HoursReport';\n\n\nconst HoursReportTable = (props) => {\n    const { reports } = props;\n\n    let noReportsLabel = \"\";\n    let jsxReports=[];\n    if(reports!==null && reports!==undefined) {\n        reports.forEach(report => {\n            jsxReports.push(<HoursReport report={report}/>);\n        });\n    }\n    if(jsxReports.length===0) {\n        noReportsLabel = \"אין דיווחים\"        \n    }\n\n    return (\n        <div>\n            <table className=\"c-hours-report-table\">\n                <thead>\n                    <tr>\n                        <th>תאריך</th>\n                        <th>פרויקט</th>\n                        <th>נושא פעילות</th>\n                        <th>סה\"כ שעות</th>                        \n                    </tr>\n                </thead>\n                <tbody>\n                    {jsxReports}\n                </tbody>\n            </table>\n            <div className=\"c-no-report-msg\">{noReportsLabel}</div>\n        </div>\n    );\n}\n\nexport default HoursReportTable;","import React from 'react';\nimport { ButtonGroup } from 'react-bootstrap'\nimport { useState } from 'react';\nimport './PortalDayMonthPickerComponent.css'\n\n\n\n// gets two optional props:\n//date- the date to initialyy display, if not passed, show the current day\n//type- the selector type :\"day\" or \"month\", default is \"month\"\nconst PortalDayMonthPickerComponent = (props) => {\n    \n    const initialDate = props.date ? props.date : new Date();\n    const displayType=props.type?props.type:\"month\";\n    const [theDateToShow,setTheDateToShow]=useState(initialDate)\n    const months= [\"ינואר\",\"פברואר\",\"מרץ\",\"אפריל\",\"מאי\",\"יוני\",\"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\",\"דצמבר\"]\n\n    // format of the date that will be shown on screen\n    const showText=(aDate)=>\n    {\n        props.onShowDate(aDate);\n        if (displayType===\"day\")\n        { \n           return aDate.toLocaleDateString('en-GB') ;\n        }\n        else{\n            return months[aDate.getMonth()] +\" \"+aDate.getFullYear() ;\n        }\n        \n    }\n\n    const addMonth=()=>\n    {\n        var currentMonth=theDateToShow.getMonth();\n        var currentYear=theDateToShow.getFullYear();\n        var newDate = new Date(theDateToShow.getTime());\n        if (currentMonth<11)  // from 0-11\n        {\n            newDate.setMonth(currentMonth+1);\n        }\n        else{\n            newDate.setFullYear(currentYear+1);\n            newDate.setMonth(0);\n        }\n        setTheDateToShow(newDate);\n   }\n\n    const removeMonth=()=>\n    {\n        var currentMonth=theDateToShow.getMonth();\n        var currentYear=theDateToShow.getFullYear();\n        var newDate=new Date(theDateToShow.getTime());;\n\n        if (currentMonth>0) // from 0-11\n        {\n            newDate.setMonth(currentMonth-1);\n        }\n        else{\n            newDate.setFullYear(currentYear-1);\n            newDate.setMonth(11);\n        }\n        setTheDateToShow(newDate);\n\n    }\n    const addDay=()=>\n    {\n        var newDate = new Date(theDateToShow.getTime());\n        newDate.setDate(newDate.getDate() + 1);\n        setTheDateToShow(newDate);\n\n    }\n    const removeDay=()=>\n    {\n        var newDate = new Date(theDateToShow.getTime());\n        newDate.setDate(newDate.getDate() - 1);\n        setTheDateToShow(newDate);\n        \n    }\n\n\n    const handleMinusClick=()=>\n    {\n        if (displayType===\"day\")\n        {\n            removeDay(); \n        }\n        else{\n            removeMonth();\n        }\n             \n    }\n\n\n    const handlePlusClick=()=>\n    {\n        if (displayType===\"day\")\n        {\n            addDay();\n        }\n        else{\n            addMonth();\n        }\n\n    }\n\n\n    return (\n        <div className=\"c-day-month-picker\">\n        <ButtonGroup aria-label=\"Basic example\">\n            <div onClick={() =>handleMinusClick() } >\n                <img src=\"images/arrow-right.png\" alt=\"-\" ></img>\n            </div>\n            <div className=\"date-text\" >{showText(theDateToShow)}</div>\n            <div  onClick={() => { handlePlusClick() }}>\n                <img src=\"images/arrow-left.png\" alt=\"+\"></img>\n            </div>\n        </ButtonGroup>\n        </div>\n    );\n}\n\nexport default PortalDayMonthPickerComponent;","import React from 'react';\nimport './PlusButtonTool.css'\n\nconst PlusButtonTool = (props) => {\n    const {report} = props;\n\n\n    return (\n        <div class=\"c-plus-button-tool\">\n        <div>+</div>\n        </div>    \n    );\n}\n\nexport default PlusButtonTool;","import React from 'react';\nimport './ToolBarFooter.css'\nimport PlusButtonTool from \"./PlusButtonTool\";\n\n\nconst ToolBarFooter = (props) => {\n    const {report} = props;\n\n\n    return (\n        <div class=\"c-toolbar-footer\">\n        <PlusButtonTool/>\n        </div>    \n    );\n}\n\nexport default ToolBarFooter;","import React, { useContext, useState, useEffect } from \"react\";\nimport './hours.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport ActiveUserContext from '../../shared/activeUserContext'\nimport HoursReportTable from '../../components/hours/HoursReportTable'\nimport PortalDayMonthPickerComponent from '../../components/PortalDayMonthPickerComponent/PortalDayMonthPickerComponent'\nimport server from \"../../shared/server\";\nimport ToolBarFooter from \"../../components/hours/ToolBarFooter\";\n\n\nconst HoursReportPage = (props) => {\n    const { handleLogout } = props;\n    const activeUser = useContext(ActiveUserContext);\n    const [reports, setReports] = useState([]);\n    const [perimeter, setPerimeter] = useState(null);\n    const [showDate, setShowDate] = useState(new Date());\n    const [totalMilliseconds, setTotalMilliseconds] = useState(0);\n\n    const onShowDate=(aDate) => {\n        setShowDate(aDate);\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n          const requestData = {\n          };\n          server(activeUser, requestData, \"GetMyReportingPerimeter\").then(\n            res => {\n                console.log(res.data);\n                setPerimeter(res.data);\n               if (res.data.error) {\n                alert(\"error in GetMyReportingPerimeter\");\n              } else {\n                // handleLogin(res.data);\n              }\n            },\n            err => {\n              console.error(err);\n            }\n          );\n        };\n        if (activeUser) {\n          fetchData();\n        }\n      }, []);\n\n      useEffect(() => {\n        const fetchData = async () => {\n          const requestData = {\n            month: showDate.getMonth()+1,\n            year:  showDate.getFullYear()\n          };\n          server(activeUser, requestData, \"GetReports\").then(\n            res => {\n                //res.data.forEach(report=>{console.log(perimeter[report.projectid].projectName)});\n                let timeCount = 0;\n                res.data.forEach(report=>{\n                    // add projectName & subject to report\n                    const projectData = perimeter[report.projectid];\n                    if(projectData===undefined) {\n                      report.projectName = \"NA\";\n                      report.subject = \"NA\";  \n                    } else {\n                      report.projectName = projectData.projectName;\n                      const subjectData = projectData.subjects.find(subject=>subject.reportsubjectid==report.actionid);\n                      report.subject = (subjectData===undefined)? \"NA\" : subjectData.subject;\n                    }\n                    // compute reported time from starthour and finishhour prperties\n                    const startHour = new Date(\"January 1 2000 \" + report.starthour);\n                    const finishHour = new Date(\"January 1 2000 \" + report.finishhour);\n                    const timeMilliseconds = finishHour-startHour; // milliseconds\n                    timeCount += timeMilliseconds;\n                    // convert the reported time from milliseconds to \"hh:mm\" format\n                    let hours = Math.floor(timeMilliseconds/1000/60/60);\n                    let minutes = Math.floor((timeMilliseconds - hours*60*60*1000)/1000/60);\n                    // add preceding zero if required to single digit hour/minute\n                    hours = hours<10? '0'+hours : ''+hours;\n                    minutes = minutes<10? '0'+minutes : ''+minutes;\n                    report.totalTime = hours + ':' + minutes;\n                });\n                setTotalMilliseconds(timeCount);\n                setReports(res.data);\n              console.log(res.data);\n              console.log(reports);\n\n               if (res.data.error) {\n                alert(\"error in GetReports\");\n              } else {\n                // handleLogin(res.data);\n              }\n            },\n            err => {\n              console.error(err);\n            }\n          );\n        };\n        if (activeUser && perimeter!==null) {\n          fetchData();\n        }\n      }, [showDate,perimeter]);\n\n\n    // convert total hours from milliseconds to hours\n    const totalHours = Math.floor(totalMilliseconds/1000/60/60);\n    const totalHoursHeader = 'סה\"כ שעות:  ' + totalHours;\n\n    return (\n        <div>\n            <PortalNavbar handleLogout={handleLogout} navbarTitle={\"דיווח שעות\"}/>\n            <PortalDayMonthPickerComponent onShowDate={onShowDate}/>\n            <div className=\"p-total-hours\">{totalHoursHeader}</div>\n            <HoursReportTable reports={reports}/>\n            <ToolBarFooter/>\n        </div>\n    );\n}\n\nexport default HoursReportPage;","import React from 'react';\nimport { useState } from 'react';\nimport \"./ReportedHoursDetailsItem.css\"\nimport { Checkbox } from 'react-bootstrap';\n\nconst ReportedHoursDetailsItem = (props) => {\n    const {reportedHoursObject, changeStatus} =  props;\n    if (!reportedHoursObject)\n    {\n        return null;\n    }\n\n    const returnClassType= (reportedHoursObject)=>\n    {\n        if(!reportedHoursObject) \n            return \"pending\";\n        switch (reportedHoursObject.status)\n        {\n            case -1:\n                return \"rejected\";\n                break;\n            case 1:\n                return \"approved\";\n                break;\n            case 0:\n                return \"pending\";\n                break;\n\n        }\n \n  \n\n    }\n    let classType= \"pending\";\n\n    return (\n        <div className=\"c-reported-hours-details-item\">      \n            <div className=\"radio-action\" >\n                <div>\n                    <input type=\"radio\" id={`approved-${reportedHoursObject.id}`} name={`radio-group${reportedHoursObject.id}`}  checked={returnClassType(reportedHoursObject)===\"approved\"} />\n                    <label className=\"approved\" for={`approved-${reportedHoursObject.id}`}>אשר<div className=\"radio approved\" onClick={() => changeStatus(reportedHoursObject.id, 1)}><span></span></div></label>\n                </div>\n                <div>\n                    <input type=\"radio\" id={`pending-${reportedHoursObject.id}`} name={`radio-group${reportedHoursObject.id}`} checked={returnClassType(reportedHoursObject)===\"pending\"} />  \n                    <label className=\"pending\" for={`pending-   ${reportedHoursObject.id}`}>ממתין<div className=\"radio pending\" onClick={() => changeStatus(reportedHoursObject.id, 0)}><span></span></div></label>\n                </div>\n                <div >    \n                    <input type=\"radio\" id={`rejected-${reportedHoursObject.id}`} name={`radio-group${reportedHoursObject.id}`} checked={returnClassType(reportedHoursObject)===\"rejected\"} />\n                    <label className=\"rejected\" for={`rejected-${reportedHoursObject.id}`}>דחה<div className=\"radio rejected\" onClick={() => changeStatus(reportedHoursObject.id, -1)}><span></span></div></label>\n                </div>\n               \n            </div>\n            <div className={`data ${returnClassType(reportedHoursObject)}`}>\n            <div className=\"header-data\">\n                <div className=\"checkbox-div bold\" >    \n                    <input type=\"checkbox\" id=\"select\" />\n                    <label for=\"select\"> תאריך <span> 19/2/2020</span></label>\n                    <label> סהכ שעות <span>9</span></label>   \n                </div>\n            </div>\n            <div className=\"content-data\">\n                <div className=\"content-item\" >    \n                    <label >פרויקט</label>\n                    <label className=\"bold\">{reportedHoursObject.projectName}</label>\n                </div>\n                <div className=\"content-item\">    \n                    <label>מס/שם קורס</label>\n                    <label className=\"bold\">{reportedHoursObject.courseName}</label>\n                </div>\n                <div className=\"content-item\">    \n                    <label>נושא פעילות</label>\n                    <label className=\"bold\">{reportedHoursObject.activitySubject}</label>\n                </div>\n                \n            </div>\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default ReportedHoursDetailsItem;","import React from 'react';\nimport { useState } from 'react';\nimport './WorkerHoursReportingItem.css'\n\nconst WorkerHoursReportingItem = (props) => {\n\n    const {workerDetails} =  props;\n\n\n    return (\n        <div className=\"c-worker-hours-reporting-item\">\n            <div className=\"worker-name\" >{workerDetails.name}</div>\n            <div className=\"worker-params\">\n                <div  className=\"d-inline-block hours-pending\">{workerDetails.pendingHours}</div>\n                <div className=\"d-inline-block hours-approved\">{workerDetails.approvedHours}</div>              \n                <div className=\"d-inline-block hours-rejected\">{workerDetails.rejectedHours}</div>\n                <div className=\"d-inline-block hours-total\">{workerDetails.totalHours}</div>\n                <div className=\"d-inline-block\">\n                    <img className=\"open\" src=\"images/arrow-down.png\" alt=\"open\"></img>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default WorkerHoursReportingItem;","import React, { useContext, useEffect } from 'react';\nimport { useState } from 'react';\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport ActiveUserContext from '../../shared/activeUserContext'\nimport PortalSearchPager from \"../../components/search/PortalSearchPager\";\nimport ReportedHoursDetailsItem from \"./ReportedHoursDetailsItem\";\nimport WorkerHoursReportingItem from \"./WorkerHoursReportingItem\";\nimport { Redirect } from 'react-router-dom'\nimport PortalDayMonthPickerComponent from '../../components/PortalDayMonthPickerComponent/PortalDayMonthPickerComponent';\nimport { Accordion,Card } from 'react-bootstrap'\nimport './hoursApprovePage.css'\nimport server from \"../../shared/server\";\n\nconst HoursApprovePage = (props) => {\n    const { handleLogout } = props;\n    const activeUser = useContext(ActiveUserContext);\n    const [currentWorker,setCurrentWorker]=useState(null);\n    const [reports, setReports] = useState([]);   // data of the current selected user\n    const [allWorkers,setAllWorkers]=useState([]);\n    const [pages, setPages] = useState(0);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [workersSearchString, setWorkersSearchString] = useState(\"\");\n    const [currentShownDate,setCurrentShownDate]=useState(new Date());\n    \n    \n    const onShowDate=(aDate) => {\n        setCurrentShownDate(aDate);\n    }\n\n   \n    useEffect(() => {     \n        if (currentWorker) {\n             /// get the reports for this user from db\n             setReports(setReportsData(currentWorker));\n        } else {\n            setReports([]);\n        }\n\n    }, [currentWorker])\n\n    useEffect(() => {      \n        // call database to change data\n        const workersArray=[];\n        const fetchData = async () => {\n            console.log(currentShownDate.getMonth(),currentShownDate.getFullYear() );\n            const requestData = {\n                month: currentShownDate.getMonth()+1,\n                year:  currentShownDate.getFullYear()\n            };\n            server(activeUser, requestData, \"GetAllReporters\").then(\n              res => {\n\n                    let pendingHours=0;\n                    let rejectedHours=0;\n                    let approvedHours=0;\n                    let totalHours=180;\n                    res.data.forEach(item=>\n                    {\n                        if (item.reports.length>0){\n                            pendingHours=100;\n                            rejectedHours=30;\n                            approvedHours=50;\n                            totalHours=180;                         \n                        }\n                        else{\n                            pendingHours=0;\n                            rejectedHours=0;\n                            approvedHours=0;\n                            totalHours=0;\n                        }\n                                           \n                        let obj=\n                        {\n                            id:item.userid,\n                            name: item.firstname+\" \"+ item.lastname,\n                            status:item.status,\n                            pendingHours: pendingHours,\n                            rejectedHours:rejectedHours,\n                            approvedHours:approvedHours,\n                            totalHours:totalHours,\n                            reports:item.reports\n                        }\n                        workersArray.push(obj);\n                    });\n                    setAllWorkers(workersArray);\n                 if (res.data.error) {\n                    alert(\"error in GetAllReporters\");               \n                } else {\n                  // handleLogin(res.data);\n                }\n              },\n              err => {\n                console.error(err);\n              }\n            );\n          };\n          if (activeUser) {\n            fetchData();\n          }\n\n    }, [currentShownDate])\n\n\n\n\n    if (!activeUser) {\n        return <Redirect to='/' />\n    }\n\n\n    \n    const setReportsData=(currentWorker)=>\n    {\n        let reportedHoursArray=[];\n\n        //currentWorker holds the id,\n        // find the worker    \n        \n        let worker=allWorkers.find(element => element.id=== currentWorker);\n        if (worker.reports &&worker.reports.length>0 ) \n        {  \n            worker.reports.forEach(item=>{\n                const reportedHoursObject= {\n                    id:item.reportid,\n                    status: parseInt(item.approval),\n                    date:item.date,\n                    noOfHours:item.finishhour-item.starthour,\n                    projectName:item.projectid,\n                    courseName:item.courseid,\n                    activitySubject: item.actionid\n                }\n                reportedHoursArray.push(reportedHoursObject);\n\n            })\n        }\n\n      \n        return reportedHoursArray;\n    }\n\n    const handleSearch = searchInput => {\n        setCurrentPage(0);\n        setWorkersSearchString(searchInput);\n      };\n\n      const pageChange = newCurrentPage => {\n        setCurrentPage(newCurrentPage);\n      };\n\n    const handleAccordionClick=(event)=>{\n        setCurrentWorker(event) ;  // current worker id is set\n      }\n  \n\n      const changeStatus = (reportId, newStatus) => {\n\n        const data = {\n            reportids: [reportId],\n            status: newStatus,\n            checkdate2: true\n        }\n        server(activeUser, data, \"SetReportApproval\").then(() => {\n            const reportsCopy = [...reports];\n            const report = reportsCopy.find(currReport => currReport.id === reportId);\n            report.status = newStatus;\n            setReports(reportsCopy);\n        });\n        \n      }\n\n    let accordionBody=reports.map(item=>{\n        return(\n            <ReportedHoursDetailsItem reportedHoursObject={item} changeStatus={changeStatus}></ReportedHoursDetailsItem>\n        )\n    });\n\n    const accordionItems=allWorkers.map(item=>{\n        return (\n            <Card>\n            <Accordion.Toggle as={Card.Header} eventKey={item.id} onClick={()=>handleAccordionClick(item.id)}>\n                <WorkerHoursReportingItem workerDetails={item} ></WorkerHoursReportingItem>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={item.id}>\n                <Card.Body>\n                   {item.id === currentWorker ? accordionBody :null}\n                </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n\n        )\n    })\n\n\n    return (\n        <div className=\"p-hours-approve-page\">\n            <PortalNavbar  handleLogout={handleLogout} navbarTitle=\"אישור שעות\"/>\n            <PortalDayMonthPickerComponent className=\"month-picker\" date={new Date()} onShowDate={onShowDate}></PortalDayMonthPickerComponent>\n            <PortalSearchPager  \n                placeholder={\"חיפוש עובד\"}\n                pages={pages}\n                currentPage={currentPage}\n                handleSearch={handleSearch}\n                pageChange={pageChange}>\n            </PortalSearchPager>\n            <Accordion>\n                {accordionItems}\n            </Accordion>\n                        \n        </div>\n    );\n}\n\nexport default HoursApprovePage;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport { Switch, Route } from 'react-router-dom'\nimport LoginPage from './pages/login/LoginPage'\nimport CoursesPage from './pages/courses/CoursesPage'\nimport CourseDetailsPage from './pages/courses/CourseDetailsPage'\nimport UsersPage from './pages/users/UsersPage'\nimport UserDetailsPage from './pages/users/UserDetailsPage'\nimport HoursReportPage from './pages/hours/HoursReportPage'\nimport HoursApprovePage from './pages/hours/HoursApprovePage'\nimport ActiveUserContext from './shared/activeUserContext'\n\nimport './App.css';\n\nconst App = () => {\n\n  const [activeUser, setActiveUser] = useState(localStorage.activeUser ? JSON.parse(localStorage.activeUser) : null);\n\n  const handleLogin = (activeUser) => {\n    setActiveUser(activeUser);\n    localStorage.activeUser = JSON.stringify(activeUser);\n  }\n\n  const handleLogout = () => {\n    setActiveUser(null);\n    localStorage.removeItem(\"activeUser\");\n  }\n\n  return (\n    <ActiveUserContext.Provider value={activeUser}>\n      <Switch>\n        <Route exact path=\"/\">\n          <LoginPage handleLogin={handleLogin} />\n        </Route>\n        <Route exact path=\"/courses\">\n          <CoursesPage handleLogout={handleLogout}/>\n        </Route>\n        <Route path=\"/courses/:id\">\n          <CourseDetailsPage handleLogout={handleLogout}/>\n        </Route>\n        <Route exact path=\"/users\" render={ props => <UsersPage {...props}/>}/>\n        <Route path=\"/users/:id\" render={ props => <UserDetailsPage {...props} handleLogout={handleLogout}/>}>\n        </Route>\n        <Route path=\"/hours-report\">\n          <HoursReportPage handleLogout={handleLogout}/>\n        </Route>\n        <Route path=\"/hours-approve\">\n          <HoursApprovePage handleLogout={handleLogout}/>\n        </Route>\n      </Switch>\n    </ActiveUserContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}